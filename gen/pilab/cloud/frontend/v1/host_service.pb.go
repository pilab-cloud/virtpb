// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        (unknown)
// source: pilab/cloud/frontend/v1/host_service.proto

package frontendv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HostStatus int32

const (
	HostStatus_HOST_STATUS_UNSPECIFIED  HostStatus = 0
	HostStatus_HOST_STATUS_CONNECTED    HostStatus = 1
	HostStatus_HOST_STATUS_DISCONNECTED HostStatus = 2
	HostStatus_HOST_STATUS_MAINTENANCE  HostStatus = 3
)

// Enum value maps for HostStatus.
var (
	HostStatus_name = map[int32]string{
		0: "HOST_STATUS_UNSPECIFIED",
		1: "HOST_STATUS_CONNECTED",
		2: "HOST_STATUS_DISCONNECTED",
		3: "HOST_STATUS_MAINTENANCE",
	}
	HostStatus_value = map[string]int32{
		"HOST_STATUS_UNSPECIFIED":  0,
		"HOST_STATUS_CONNECTED":    1,
		"HOST_STATUS_DISCONNECTED": 2,
		"HOST_STATUS_MAINTENANCE":  3,
	}
)

func (x HostStatus) Enum() *HostStatus {
	p := new(HostStatus)
	*p = x
	return p
}

func (x HostStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HostStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_pilab_cloud_frontend_v1_host_service_proto_enumTypes[0].Descriptor()
}

func (HostStatus) Type() protoreflect.EnumType {
	return &file_pilab_cloud_frontend_v1_host_service_proto_enumTypes[0]
}

func (x HostStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HostStatus.Descriptor instead.
func (HostStatus) EnumDescriptor() ([]byte, []int) {
	return file_pilab_cloud_frontend_v1_host_service_proto_rawDescGZIP(), []int{0}
}

type VMStatus int32

const (
	VMStatus_VM_STATUS_UNSPECIFIED   VMStatus = 0
	VMStatus_VM_STATUS_RUNNING       VMStatus = 1
	VMStatus_VM_STATUS_STOPPED       VMStatus = 2
	VMStatus_VM_STATUS_PAUSED        VMStatus = 3
	VMStatus_VM_STATUS_SHUTTING_DOWN VMStatus = 4
	VMStatus_VM_STATUS_ERROR         VMStatus = 5
)

// Enum value maps for VMStatus.
var (
	VMStatus_name = map[int32]string{
		0: "VM_STATUS_UNSPECIFIED",
		1: "VM_STATUS_RUNNING",
		2: "VM_STATUS_STOPPED",
		3: "VM_STATUS_PAUSED",
		4: "VM_STATUS_SHUTTING_DOWN",
		5: "VM_STATUS_ERROR",
	}
	VMStatus_value = map[string]int32{
		"VM_STATUS_UNSPECIFIED":   0,
		"VM_STATUS_RUNNING":       1,
		"VM_STATUS_STOPPED":       2,
		"VM_STATUS_PAUSED":        3,
		"VM_STATUS_SHUTTING_DOWN": 4,
		"VM_STATUS_ERROR":         5,
	}
)

func (x VMStatus) Enum() *VMStatus {
	p := new(VMStatus)
	*p = x
	return p
}

func (x VMStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VMStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_pilab_cloud_frontend_v1_host_service_proto_enumTypes[1].Descriptor()
}

func (VMStatus) Type() protoreflect.EnumType {
	return &file_pilab_cloud_frontend_v1_host_service_proto_enumTypes[1]
}

func (x VMStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VMStatus.Descriptor instead.
func (VMStatus) EnumDescriptor() ([]byte, []int) {
	return file_pilab_cloud_frontend_v1_host_service_proto_rawDescGZIP(), []int{1}
}

type DatastoreType int32

const (
	DatastoreType_DATASTORE_TYPE_UNSPECIFIED DatastoreType = 0
	DatastoreType_DATASTORE_TYPE_LVM         DatastoreType = 1
	DatastoreType_DATASTORE_TYPE_NFS         DatastoreType = 2 // Add other types if necessary
)

// Enum value maps for DatastoreType.
var (
	DatastoreType_name = map[int32]string{
		0: "DATASTORE_TYPE_UNSPECIFIED",
		1: "DATASTORE_TYPE_LVM",
		2: "DATASTORE_TYPE_NFS",
	}
	DatastoreType_value = map[string]int32{
		"DATASTORE_TYPE_UNSPECIFIED": 0,
		"DATASTORE_TYPE_LVM":         1,
		"DATASTORE_TYPE_NFS":         2,
	}
)

func (x DatastoreType) Enum() *DatastoreType {
	p := new(DatastoreType)
	*p = x
	return p
}

func (x DatastoreType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DatastoreType) Descriptor() protoreflect.EnumDescriptor {
	return file_pilab_cloud_frontend_v1_host_service_proto_enumTypes[2].Descriptor()
}

func (DatastoreType) Type() protoreflect.EnumType {
	return &file_pilab_cloud_frontend_v1_host_service_proto_enumTypes[2]
}

func (x DatastoreType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DatastoreType.Descriptor instead.
func (DatastoreType) EnumDescriptor() ([]byte, []int) {
	return file_pilab_cloud_frontend_v1_host_service_proto_rawDescGZIP(), []int{2}
}

type NetworkInterfaceStatus int32

const (
	NetworkInterfaceStatus_NIC_STATUS_UNSPECIFIED  NetworkInterfaceStatus = 0
	NetworkInterfaceStatus_NIC_STATUS_CONNECTED    NetworkInterfaceStatus = 1
	NetworkInterfaceStatus_NIC_STATUS_DISCONNECTED NetworkInterfaceStatus = 2
)

// Enum value maps for NetworkInterfaceStatus.
var (
	NetworkInterfaceStatus_name = map[int32]string{
		0: "NIC_STATUS_UNSPECIFIED",
		1: "NIC_STATUS_CONNECTED",
		2: "NIC_STATUS_DISCONNECTED",
	}
	NetworkInterfaceStatus_value = map[string]int32{
		"NIC_STATUS_UNSPECIFIED":  0,
		"NIC_STATUS_CONNECTED":    1,
		"NIC_STATUS_DISCONNECTED": 2,
	}
)

func (x NetworkInterfaceStatus) Enum() *NetworkInterfaceStatus {
	p := new(NetworkInterfaceStatus)
	*p = x
	return p
}

func (x NetworkInterfaceStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NetworkInterfaceStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_pilab_cloud_frontend_v1_host_service_proto_enumTypes[3].Descriptor()
}

func (NetworkInterfaceStatus) Type() protoreflect.EnumType {
	return &file_pilab_cloud_frontend_v1_host_service_proto_enumTypes[3]
}

func (x NetworkInterfaceStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NetworkInterfaceStatus.Descriptor instead.
func (NetworkInterfaceStatus) EnumDescriptor() ([]byte, []int) {
	return file_pilab_cloud_frontend_v1_host_service_proto_rawDescGZIP(), []int{3}
}

type HostOverview struct {
	state              protoimpl.MessageState     `protogen:"open.v1"`
	Hostname           string                     `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Fqdn               string                     `protobuf:"bytes,2,opt,name=fqdn,proto3" json:"fqdn,omitempty"`
	Status             HostStatus                 `protobuf:"varint,3,opt,name=status,proto3,enum=pilab.cloud.director.v1.HostStatus" json:"status,omitempty"`
	Uptime             *timestamppb.Timestamp     `protobuf:"bytes,4,opt,name=uptime,proto3" json:"uptime,omitempty"`
	Manufacturer       string                     `protobuf:"bytes,5,opt,name=manufacturer,proto3" json:"manufacturer,omitempty"`
	Model              string                     `protobuf:"bytes,6,opt,name=model,proto3" json:"model,omitempty"`
	SerialNumber       string                     `protobuf:"bytes,7,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	CpuMetrics         *CPUMetrics                `protobuf:"bytes,8,opt,name=cpu_metrics,json=cpuMetrics,proto3" json:"cpu_metrics,omitempty"`
	MemoryMetrics      *MemoryMetrics             `protobuf:"bytes,9,opt,name=memory_metrics,json=memoryMetrics,proto3" json:"memory_metrics,omitempty"`
	VmCount            int32                      `protobuf:"varint,10,opt,name=vm_count,json=vmCount,proto3" json:"vm_count,omitempty"`
	ActiveAlertCount   int32                      `protobuf:"varint,11,opt,name=active_alert_count,json=activeAlertCount,proto3" json:"active_alert_count,omitempty"`
	RecentTasks        []*TaskSummary             `protobuf:"bytes,12,rep,name=recent_tasks,json=recentTasks,proto3" json:"recent_tasks,omitempty"`
	ResourceAllocation *ResourceAllocationSummary `protobuf:"bytes,13,opt,name=resource_allocation,json=resourceAllocation,proto3" json:"resource_allocation,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *HostOverview) Reset() {
	*x = HostOverview{}
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HostOverview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostOverview) ProtoMessage() {}

func (x *HostOverview) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostOverview.ProtoReflect.Descriptor instead.
func (*HostOverview) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_frontend_v1_host_service_proto_rawDescGZIP(), []int{0}
}

func (x *HostOverview) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *HostOverview) GetFqdn() string {
	if x != nil {
		return x.Fqdn
	}
	return ""
}

func (x *HostOverview) GetStatus() HostStatus {
	if x != nil {
		return x.Status
	}
	return HostStatus_HOST_STATUS_UNSPECIFIED
}

func (x *HostOverview) GetUptime() *timestamppb.Timestamp {
	if x != nil {
		return x.Uptime
	}
	return nil
}

func (x *HostOverview) GetManufacturer() string {
	if x != nil {
		return x.Manufacturer
	}
	return ""
}

func (x *HostOverview) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *HostOverview) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

func (x *HostOverview) GetCpuMetrics() *CPUMetrics {
	if x != nil {
		return x.CpuMetrics
	}
	return nil
}

func (x *HostOverview) GetMemoryMetrics() *MemoryMetrics {
	if x != nil {
		return x.MemoryMetrics
	}
	return nil
}

func (x *HostOverview) GetVmCount() int32 {
	if x != nil {
		return x.VmCount
	}
	return 0
}

func (x *HostOverview) GetActiveAlertCount() int32 {
	if x != nil {
		return x.ActiveAlertCount
	}
	return 0
}

func (x *HostOverview) GetRecentTasks() []*TaskSummary {
	if x != nil {
		return x.RecentTasks
	}
	return nil
}

func (x *HostOverview) GetResourceAllocation() *ResourceAllocationSummary {
	if x != nil {
		return x.ResourceAllocation
	}
	return nil
}

type CPUMetrics struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UsagePercent  float64                `protobuf:"fixed64,1,opt,name=usage_percent,json=usagePercent,proto3" json:"usage_percent,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CPUMetrics) Reset() {
	*x = CPUMetrics{}
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPUMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPUMetrics) ProtoMessage() {}

func (x *CPUMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPUMetrics.ProtoReflect.Descriptor instead.
func (*CPUMetrics) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_frontend_v1_host_service_proto_rawDescGZIP(), []int{1}
}

func (x *CPUMetrics) GetUsagePercent() float64 {
	if x != nil {
		return x.UsagePercent
	}
	return 0
}

type MemoryMetrics struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UsagePercent  float64                `protobuf:"fixed64,1,opt,name=usage_percent,json=usagePercent,proto3" json:"usage_percent,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MemoryMetrics) Reset() {
	*x = MemoryMetrics{}
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MemoryMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemoryMetrics) ProtoMessage() {}

func (x *MemoryMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemoryMetrics.ProtoReflect.Descriptor instead.
func (*MemoryMetrics) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_frontend_v1_host_service_proto_rawDescGZIP(), []int{2}
}

func (x *MemoryMetrics) GetUsagePercent() float64 {
	if x != nil {
		return x.UsagePercent
	}
	return 0
}

type TaskSummary struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Status        string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskSummary) Reset() {
	*x = TaskSummary{}
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskSummary) ProtoMessage() {}

func (x *TaskSummary) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskSummary.ProtoReflect.Descriptor instead.
func (*TaskSummary) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_frontend_v1_host_service_proto_rawDescGZIP(), []int{3}
}

func (x *TaskSummary) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TaskSummary) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *TaskSummary) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *TaskSummary) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type ResourceAllocationSummary struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cpu           *CPUAllocation         `protobuf:"bytes,1,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory        *MemoryAllocation      `protobuf:"bytes,2,opt,name=memory,proto3" json:"memory,omitempty"`
	Storage       *StorageAllocation     `protobuf:"bytes,3,opt,name=storage,proto3" json:"storage,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResourceAllocationSummary) Reset() {
	*x = ResourceAllocationSummary{}
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceAllocationSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceAllocationSummary) ProtoMessage() {}

func (x *ResourceAllocationSummary) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceAllocationSummary.ProtoReflect.Descriptor instead.
func (*ResourceAllocationSummary) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_frontend_v1_host_service_proto_rawDescGZIP(), []int{4}
}

func (x *ResourceAllocationSummary) GetCpu() *CPUAllocation {
	if x != nil {
		return x.Cpu
	}
	return nil
}

func (x *ResourceAllocationSummary) GetMemory() *MemoryAllocation {
	if x != nil {
		return x.Memory
	}
	return nil
}

func (x *ResourceAllocationSummary) GetStorage() *StorageAllocation {
	if x != nil {
		return x.Storage
	}
	return nil
}

type CPUAllocation struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TotalCores     int32                  `protobuf:"varint,1,opt,name=total_cores,json=totalCores,proto3" json:"total_cores,omitempty"`
	AllocatedCores int32                  `protobuf:"varint,2,opt,name=allocated_cores,json=allocatedCores,proto3" json:"allocated_cores,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CPUAllocation) Reset() {
	*x = CPUAllocation{}
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPUAllocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPUAllocation) ProtoMessage() {}

func (x *CPUAllocation) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPUAllocation.ProtoReflect.Descriptor instead.
func (*CPUAllocation) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_frontend_v1_host_service_proto_rawDescGZIP(), []int{5}
}

func (x *CPUAllocation) GetTotalCores() int32 {
	if x != nil {
		return x.TotalCores
	}
	return 0
}

func (x *CPUAllocation) GetAllocatedCores() int32 {
	if x != nil {
		return x.AllocatedCores
	}
	return 0
}

type MemoryAllocation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TotalGb       int64                  `protobuf:"varint,1,opt,name=total_gb,json=totalGb,proto3" json:"total_gb,omitempty"`
	AllocatedGb   int64                  `protobuf:"varint,2,opt,name=allocated_gb,json=allocatedGb,proto3" json:"allocated_gb,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MemoryAllocation) Reset() {
	*x = MemoryAllocation{}
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MemoryAllocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemoryAllocation) ProtoMessage() {}

func (x *MemoryAllocation) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemoryAllocation.ProtoReflect.Descriptor instead.
func (*MemoryAllocation) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_frontend_v1_host_service_proto_rawDescGZIP(), []int{6}
}

func (x *MemoryAllocation) GetTotalGb() int64 {
	if x != nil {
		return x.TotalGb
	}
	return 0
}

func (x *MemoryAllocation) GetAllocatedGb() int64 {
	if x != nil {
		return x.AllocatedGb
	}
	return 0
}

type StorageAllocation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TotalGb       int64                  `protobuf:"varint,1,opt,name=total_gb,json=totalGb,proto3" json:"total_gb,omitempty"`
	UsedGb        int64                  `protobuf:"varint,2,opt,name=used_gb,json=usedGb,proto3" json:"used_gb,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StorageAllocation) Reset() {
	*x = StorageAllocation{}
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorageAllocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageAllocation) ProtoMessage() {}

func (x *StorageAllocation) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageAllocation.ProtoReflect.Descriptor instead.
func (*StorageAllocation) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_frontend_v1_host_service_proto_rawDescGZIP(), []int{7}
}

func (x *StorageAllocation) GetTotalGb() int64 {
	if x != nil {
		return x.TotalGb
	}
	return 0
}

func (x *StorageAllocation) GetUsedGb() int64 {
	if x != nil {
		return x.UsedGb
	}
	return 0
}

type MonitoringDataRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hostname      string                 `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Metric        string                 `protobuf:"bytes,2,opt,name=metric,proto3" json:"metric,omitempty"`       // e.g., "cpu_usage", "memory_usage", "network_throughput"
	Interface     string                 `protobuf:"bytes,3,opt,name=interface,proto3" json:"interface,omitempty"` // Optional for network metrics
	Datastore     string                 `protobuf:"bytes,4,opt,name=datastore,proto3" json:"datastore,omitempty"` // Optional for storage metrics
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MonitoringDataRequest) Reset() {
	*x = MonitoringDataRequest{}
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MonitoringDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonitoringDataRequest) ProtoMessage() {}

func (x *MonitoringDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonitoringDataRequest.ProtoReflect.Descriptor instead.
func (*MonitoringDataRequest) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_frontend_v1_host_service_proto_rawDescGZIP(), []int{8}
}

func (x *MonitoringDataRequest) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *MonitoringDataRequest) GetMetric() string {
	if x != nil {
		return x.Metric
	}
	return ""
}

func (x *MonitoringDataRequest) GetInterface() string {
	if x != nil {
		return x.Interface
	}
	return ""
}

func (x *MonitoringDataRequest) GetDatastore() string {
	if x != nil {
		return x.Datastore
	}
	return ""
}

func (x *MonitoringDataRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *MonitoringDataRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

type MonitoringDataResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DataPoints    []*DataPoint           `protobuf:"bytes,1,rep,name=data_points,json=dataPoints,proto3" json:"data_points,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MonitoringDataResponse) Reset() {
	*x = MonitoringDataResponse{}
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MonitoringDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonitoringDataResponse) ProtoMessage() {}

func (x *MonitoringDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonitoringDataResponse.ProtoReflect.Descriptor instead.
func (*MonitoringDataResponse) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_frontend_v1_host_service_proto_rawDescGZIP(), []int{9}
}

func (x *MonitoringDataResponse) GetDataPoints() []*DataPoint {
	if x != nil {
		return x.DataPoints
	}
	return nil
}

type DataPoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Value         float64                `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataPoint) Reset() {
	*x = DataPoint{}
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataPoint) ProtoMessage() {}

func (x *DataPoint) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataPoint.ProtoReflect.Descriptor instead.
func (*DataPoint) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_frontend_v1_host_service_proto_rawDescGZIP(), []int{10}
}

func (x *DataPoint) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *DataPoint) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type HostVMsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Vms           []*VMInfo              `protobuf:"bytes,1,rep,name=vms,proto3" json:"vms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HostVMsResponse) Reset() {
	*x = HostVMsResponse{}
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HostVMsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostVMsResponse) ProtoMessage() {}

func (x *HostVMsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostVMsResponse.ProtoReflect.Descriptor instead.
func (*HostVMsResponse) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_frontend_v1_host_service_proto_rawDescGZIP(), []int{11}
}

func (x *HostVMsResponse) GetVms() []*VMInfo {
	if x != nil {
		return x.Vms
	}
	return nil
}

type VMInfo struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name             string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Status           VMStatus               `protobuf:"varint,3,opt,name=status,proto3,enum=pilab.cloud.director.v1.VMStatus" json:"status,omitempty"`
	CpuUsagePercent  float64                `protobuf:"fixed64,4,opt,name=cpu_usage_percent,json=cpuUsagePercent,proto3" json:"cpu_usage_percent,omitempty"`
	MemoryUsageBytes int64                  `protobuf:"varint,5,opt,name=memory_usage_bytes,json=memoryUsageBytes,proto3" json:"memory_usage_bytes,omitempty"`
	Uptime           *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=uptime,proto3" json:"uptime,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *VMInfo) Reset() {
	*x = VMInfo{}
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VMInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VMInfo) ProtoMessage() {}

func (x *VMInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VMInfo.ProtoReflect.Descriptor instead.
func (*VMInfo) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_frontend_v1_host_service_proto_rawDescGZIP(), []int{12}
}

func (x *VMInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *VMInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VMInfo) GetStatus() VMStatus {
	if x != nil {
		return x.Status
	}
	return VMStatus_VM_STATUS_UNSPECIFIED
}

func (x *VMInfo) GetCpuUsagePercent() float64 {
	if x != nil {
		return x.CpuUsagePercent
	}
	return 0
}

func (x *VMInfo) GetMemoryUsageBytes() int64 {
	if x != nil {
		return x.MemoryUsageBytes
	}
	return 0
}

func (x *VMInfo) GetUptime() *timestamppb.Timestamp {
	if x != nil {
		return x.Uptime
	}
	return nil
}

type HostPermissionsResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	UserPermissions []*HostUser            `protobuf:"bytes,1,rep,name=user_permissions,json=userPermissions,proto3" json:"user_permissions,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *HostPermissionsResponse) Reset() {
	*x = HostPermissionsResponse{}
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HostPermissionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostPermissionsResponse) ProtoMessage() {}

func (x *HostPermissionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostPermissionsResponse.ProtoReflect.Descriptor instead.
func (*HostPermissionsResponse) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_frontend_v1_host_service_proto_rawDescGZIP(), []int{13}
}

func (x *HostPermissionsResponse) GetUserPermissions() []*HostUser {
	if x != nil {
		return x.UserPermissions
	}
	return nil
}

type HostUser struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	LastLogin     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=last_login,json=lastLogin,proto3" json:"last_login,omitempty"`
	Groups        []string               `protobuf:"bytes,3,rep,name=groups,proto3" json:"groups,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HostUser) Reset() {
	*x = HostUser{}
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HostUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostUser) ProtoMessage() {}

func (x *HostUser) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostUser.ProtoReflect.Descriptor instead.
func (*HostUser) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_frontend_v1_host_service_proto_rawDescGZIP(), []int{14}
}

func (x *HostUser) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *HostUser) GetLastLogin() *timestamppb.Timestamp {
	if x != nil {
		return x.LastLogin
	}
	return nil
}

func (x *HostUser) GetGroups() []string {
	if x != nil {
		return x.Groups
	}
	return nil
}

type HostDatastoresResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Datastores    []*DatastoreInfo       `protobuf:"bytes,1,rep,name=datastores,proto3" json:"datastores,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HostDatastoresResponse) Reset() {
	*x = HostDatastoresResponse{}
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HostDatastoresResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostDatastoresResponse) ProtoMessage() {}

func (x *HostDatastoresResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostDatastoresResponse.ProtoReflect.Descriptor instead.
func (*HostDatastoresResponse) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_frontend_v1_host_service_proto_rawDescGZIP(), []int{15}
}

func (x *HostDatastoresResponse) GetDatastores() []*DatastoreInfo {
	if x != nil {
		return x.Datastores
	}
	return nil
}

type DatastoreInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type          DatastoreType          `protobuf:"varint,2,opt,name=type,proto3,enum=pilab.cloud.director.v1.DatastoreType" json:"type,omitempty"`
	CapacityGb    int64                  `protobuf:"varint,3,opt,name=capacity_gb,json=capacityGb,proto3" json:"capacity_gb,omitempty"`
	FreeGb        int64                  `protobuf:"varint,4,opt,name=free_gb,json=freeGb,proto3" json:"free_gb,omitempty"`
	Path          string                 `protobuf:"bytes,5,opt,name=path,proto3" json:"path,omitempty"`
	Status        string                 `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"` // e.g., "mounted"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DatastoreInfo) Reset() {
	*x = DatastoreInfo{}
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DatastoreInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatastoreInfo) ProtoMessage() {}

func (x *DatastoreInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatastoreInfo.ProtoReflect.Descriptor instead.
func (*DatastoreInfo) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_frontend_v1_host_service_proto_rawDescGZIP(), []int{16}
}

func (x *DatastoreInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DatastoreInfo) GetType() DatastoreType {
	if x != nil {
		return x.Type
	}
	return DatastoreType_DATASTORE_TYPE_UNSPECIFIED
}

func (x *DatastoreInfo) GetCapacityGb() int64 {
	if x != nil {
		return x.CapacityGb
	}
	return 0
}

func (x *DatastoreInfo) GetFreeGb() int64 {
	if x != nil {
		return x.FreeGb
	}
	return 0
}

func (x *DatastoreInfo) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *DatastoreInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type HostSystemSettingsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	General       *GeneralSettings       `protobuf:"bytes,1,opt,name=general,proto3" json:"general,omitempty"`
	Time          *TimeSettings          `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	Dns           *DNSSettings           `protobuf:"bytes,3,opt,name=dns,proto3" json:"dns,omitempty"`
	Routing       *RoutingSettings       `protobuf:"bytes,4,opt,name=routing,proto3" json:"routing,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HostSystemSettingsResponse) Reset() {
	*x = HostSystemSettingsResponse{}
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HostSystemSettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostSystemSettingsResponse) ProtoMessage() {}

func (x *HostSystemSettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostSystemSettingsResponse.ProtoReflect.Descriptor instead.
func (*HostSystemSettingsResponse) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_frontend_v1_host_service_proto_rawDescGZIP(), []int{17}
}

func (x *HostSystemSettingsResponse) GetGeneral() *GeneralSettings {
	if x != nil {
		return x.General
	}
	return nil
}

func (x *HostSystemSettingsResponse) GetTime() *TimeSettings {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *HostSystemSettingsResponse) GetDns() *DNSSettings {
	if x != nil {
		return x.Dns
	}
	return nil
}

func (x *HostSystemSettingsResponse) GetRouting() *RoutingSettings {
	if x != nil {
		return x.Routing
	}
	return nil
}

type GeneralSettings struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Hostname         string                 `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Manufacturer     string                 `protobuf:"bytes,2,opt,name=manufacturer,proto3" json:"manufacturer,omitempty"`
	Model            string                 `protobuf:"bytes,3,opt,name=model,proto3" json:"model,omitempty"`
	SerialNumber     string                 `protobuf:"bytes,4,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	BiosVersion      string                 `protobuf:"bytes,5,opt,name=bios_version,json=biosVersion,proto3" json:"bios_version,omitempty"`
	MotherboardModel string                 `protobuf:"bytes,6,opt,name=motherboard_model,json=motherboardModel,proto3" json:"motherboard_model,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GeneralSettings) Reset() {
	*x = GeneralSettings{}
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GeneralSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneralSettings) ProtoMessage() {}

func (x *GeneralSettings) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneralSettings.ProtoReflect.Descriptor instead.
func (*GeneralSettings) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_frontend_v1_host_service_proto_rawDescGZIP(), []int{18}
}

func (x *GeneralSettings) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *GeneralSettings) GetManufacturer() string {
	if x != nil {
		return x.Manufacturer
	}
	return ""
}

func (x *GeneralSettings) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *GeneralSettings) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

func (x *GeneralSettings) GetBiosVersion() string {
	if x != nil {
		return x.BiosVersion
	}
	return ""
}

func (x *GeneralSettings) GetMotherboardModel() string {
	if x != nil {
		return x.MotherboardModel
	}
	return ""
}

type TimeSettings struct {
	state                     protoimpl.MessageState `protogen:"open.v1"`
	NtpServers                []string               `protobuf:"bytes,1,rep,name=ntp_servers,json=ntpServers,proto3" json:"ntp_servers,omitempty"`
	TimeSynchronizationStatus string                 `protobuf:"bytes,2,opt,name=time_synchronization_status,json=timeSynchronizationStatus,proto3" json:"time_synchronization_status,omitempty"`
	Timezone                  string                 `protobuf:"bytes,3,opt,name=timezone,proto3" json:"timezone,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *TimeSettings) Reset() {
	*x = TimeSettings{}
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimeSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeSettings) ProtoMessage() {}

func (x *TimeSettings) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeSettings.ProtoReflect.Descriptor instead.
func (*TimeSettings) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_frontend_v1_host_service_proto_rawDescGZIP(), []int{19}
}

func (x *TimeSettings) GetNtpServers() []string {
	if x != nil {
		return x.NtpServers
	}
	return nil
}

func (x *TimeSettings) GetTimeSynchronizationStatus() string {
	if x != nil {
		return x.TimeSynchronizationStatus
	}
	return ""
}

func (x *TimeSettings) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

type DNSSettings struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DnsServers    []string               `protobuf:"bytes,1,rep,name=dns_servers,json=dnsServers,proto3" json:"dns_servers,omitempty"`
	SearchDomains []string               `protobuf:"bytes,2,rep,name=search_domains,json=searchDomains,proto3" json:"search_domains,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DNSSettings) Reset() {
	*x = DNSSettings{}
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DNSSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DNSSettings) ProtoMessage() {}

func (x *DNSSettings) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DNSSettings.ProtoReflect.Descriptor instead.
func (*DNSSettings) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_frontend_v1_host_service_proto_rawDescGZIP(), []int{20}
}

func (x *DNSSettings) GetDnsServers() []string {
	if x != nil {
		return x.DnsServers
	}
	return nil
}

func (x *DNSSettings) GetSearchDomains() []string {
	if x != nil {
		return x.SearchDomains
	}
	return nil
}

type RoutingSettings struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	DefaultGateway string                 `protobuf:"bytes,1,opt,name=default_gateway,json=defaultGateway,proto3" json:"default_gateway,omitempty"`
	StaticRoutes   []*StaticRoute         `protobuf:"bytes,2,rep,name=static_routes,json=staticRoutes,proto3" json:"static_routes,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RoutingSettings) Reset() {
	*x = RoutingSettings{}
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoutingSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoutingSettings) ProtoMessage() {}

func (x *RoutingSettings) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoutingSettings.ProtoReflect.Descriptor instead.
func (*RoutingSettings) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_frontend_v1_host_service_proto_rawDescGZIP(), []int{21}
}

func (x *RoutingSettings) GetDefaultGateway() string {
	if x != nil {
		return x.DefaultGateway
	}
	return ""
}

func (x *RoutingSettings) GetStaticRoutes() []*StaticRoute {
	if x != nil {
		return x.StaticRoutes
	}
	return nil
}

type StaticRoute struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Destination   string                 `protobuf:"bytes,1,opt,name=destination,proto3" json:"destination,omitempty"`
	Gateway       string                 `protobuf:"bytes,2,opt,name=gateway,proto3" json:"gateway,omitempty"`
	Interface     string                 `protobuf:"bytes,3,opt,name=interface,proto3" json:"interface,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StaticRoute) Reset() {
	*x = StaticRoute{}
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StaticRoute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StaticRoute) ProtoMessage() {}

func (x *StaticRoute) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StaticRoute.ProtoReflect.Descriptor instead.
func (*StaticRoute) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_frontend_v1_host_service_proto_rawDescGZIP(), []int{22}
}

func (x *StaticRoute) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

func (x *StaticRoute) GetGateway() string {
	if x != nil {
		return x.Gateway
	}
	return ""
}

func (x *StaticRoute) GetInterface() string {
	if x != nil {
		return x.Interface
	}
	return ""
}

type MaintenanceModeStatusResponse struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	IsInMaintenanceMode bool                   `protobuf:"varint,1,opt,name=is_in_maintenance_mode,json=isInMaintenanceMode,proto3" json:"is_in_maintenance_mode,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *MaintenanceModeStatusResponse) Reset() {
	*x = MaintenanceModeStatusResponse{}
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MaintenanceModeStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaintenanceModeStatusResponse) ProtoMessage() {}

func (x *MaintenanceModeStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaintenanceModeStatusResponse.ProtoReflect.Descriptor instead.
func (*MaintenanceModeStatusResponse) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_frontend_v1_host_service_proto_rawDescGZIP(), []int{23}
}

func (x *MaintenanceModeStatusResponse) GetIsInMaintenanceMode() bool {
	if x != nil {
		return x.IsInMaintenanceMode
	}
	return false
}

type HostNetworkInterfacesResponse struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Interfaces    []*NetworkInterfaceInfo `protobuf:"bytes,1,rep,name=interfaces,proto3" json:"interfaces,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HostNetworkInterfacesResponse) Reset() {
	*x = HostNetworkInterfacesResponse{}
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HostNetworkInterfacesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostNetworkInterfacesResponse) ProtoMessage() {}

func (x *HostNetworkInterfacesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostNetworkInterfacesResponse.ProtoReflect.Descriptor instead.
func (*HostNetworkInterfacesResponse) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_frontend_v1_host_service_proto_rawDescGZIP(), []int{24}
}

func (x *HostNetworkInterfacesResponse) GetInterfaces() []*NetworkInterfaceInfo {
	if x != nil {
		return x.Interfaces
	}
	return nil
}

type NetworkInterfaceInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Status        NetworkInterfaceStatus `protobuf:"varint,2,opt,name=status,proto3,enum=pilab.cloud.director.v1.NetworkInterfaceStatus" json:"status,omitempty"`
	LinkSpeed     string                 `protobuf:"bytes,3,opt,name=link_speed,json=linkSpeed,proto3" json:"link_speed,omitempty"`
	Duplex        string                 `protobuf:"bytes,4,opt,name=duplex,proto3" json:"duplex,omitempty"`
	MacAddress    string                 `protobuf:"bytes,5,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	Driver        string                 `protobuf:"bytes,6,opt,name=driver,proto3" json:"driver,omitempty"`
	IpAddresses   []string               `protobuf:"bytes,7,rep,name=ip_addresses,json=ipAddresses,proto3" json:"ip_addresses,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkInterfaceInfo) Reset() {
	*x = NetworkInterfaceInfo{}
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkInterfaceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkInterfaceInfo) ProtoMessage() {}

func (x *NetworkInterfaceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkInterfaceInfo.ProtoReflect.Descriptor instead.
func (*NetworkInterfaceInfo) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_frontend_v1_host_service_proto_rawDescGZIP(), []int{25}
}

func (x *NetworkInterfaceInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NetworkInterfaceInfo) GetStatus() NetworkInterfaceStatus {
	if x != nil {
		return x.Status
	}
	return NetworkInterfaceStatus_NIC_STATUS_UNSPECIFIED
}

func (x *NetworkInterfaceInfo) GetLinkSpeed() string {
	if x != nil {
		return x.LinkSpeed
	}
	return ""
}

func (x *NetworkInterfaceInfo) GetDuplex() string {
	if x != nil {
		return x.Duplex
	}
	return ""
}

func (x *NetworkInterfaceInfo) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

func (x *NetworkInterfaceInfo) GetDriver() string {
	if x != nil {
		return x.Driver
	}
	return ""
}

func (x *NetworkInterfaceInfo) GetIpAddresses() []string {
	if x != nil {
		return x.IpAddresses
	}
	return nil
}

type GetHostOverviewRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hostname      string                 `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetHostOverviewRequest) Reset() {
	*x = GetHostOverviewRequest{}
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHostOverviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHostOverviewRequest) ProtoMessage() {}

func (x *GetHostOverviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHostOverviewRequest.ProtoReflect.Descriptor instead.
func (*GetHostOverviewRequest) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_frontend_v1_host_service_proto_rawDescGZIP(), []int{26}
}

func (x *GetHostOverviewRequest) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

type GetMonitoringDataRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hostname      string                 `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Metric        string                 `protobuf:"bytes,2,opt,name=metric,proto3" json:"metric,omitempty"`
	Interface     string                 `protobuf:"bytes,3,opt,name=interface,proto3" json:"interface,omitempty"`
	Datastore     string                 `protobuf:"bytes,4,opt,name=datastore,proto3" json:"datastore,omitempty"`
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime       *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=endTime,proto3" json:"endTime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMonitoringDataRequest) Reset() {
	*x = GetMonitoringDataRequest{}
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMonitoringDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMonitoringDataRequest) ProtoMessage() {}

func (x *GetMonitoringDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMonitoringDataRequest.ProtoReflect.Descriptor instead.
func (*GetMonitoringDataRequest) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_frontend_v1_host_service_proto_rawDescGZIP(), []int{27}
}

func (x *GetMonitoringDataRequest) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *GetMonitoringDataRequest) GetMetric() string {
	if x != nil {
		return x.Metric
	}
	return ""
}

func (x *GetMonitoringDataRequest) GetInterface() string {
	if x != nil {
		return x.Interface
	}
	return ""
}

func (x *GetMonitoringDataRequest) GetDatastore() string {
	if x != nil {
		return x.Datastore
	}
	return ""
}

func (x *GetMonitoringDataRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *GetMonitoringDataRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

type ListHostVMsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hostname      string                 `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListHostVMsRequest) Reset() {
	*x = ListHostVMsRequest{}
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListHostVMsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHostVMsRequest) ProtoMessage() {}

func (x *ListHostVMsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHostVMsRequest.ProtoReflect.Descriptor instead.
func (*ListHostVMsRequest) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_frontend_v1_host_service_proto_rawDescGZIP(), []int{28}
}

func (x *ListHostVMsRequest) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

type GetHostPermissionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hostname      string                 `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetHostPermissionsRequest) Reset() {
	*x = GetHostPermissionsRequest{}
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHostPermissionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHostPermissionsRequest) ProtoMessage() {}

func (x *GetHostPermissionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHostPermissionsRequest.ProtoReflect.Descriptor instead.
func (*GetHostPermissionsRequest) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_frontend_v1_host_service_proto_rawDescGZIP(), []int{29}
}

func (x *GetHostPermissionsRequest) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

type ListHostDatastoresRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hostname      string                 `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListHostDatastoresRequest) Reset() {
	*x = ListHostDatastoresRequest{}
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListHostDatastoresRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHostDatastoresRequest) ProtoMessage() {}

func (x *ListHostDatastoresRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHostDatastoresRequest.ProtoReflect.Descriptor instead.
func (*ListHostDatastoresRequest) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_frontend_v1_host_service_proto_rawDescGZIP(), []int{30}
}

func (x *ListHostDatastoresRequest) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

type GetHostSystemSettingsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hostname      string                 `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetHostSystemSettingsRequest) Reset() {
	*x = GetHostSystemSettingsRequest{}
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHostSystemSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHostSystemSettingsRequest) ProtoMessage() {}

func (x *GetHostSystemSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHostSystemSettingsRequest.ProtoReflect.Descriptor instead.
func (*GetHostSystemSettingsRequest) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_frontend_v1_host_service_proto_rawDescGZIP(), []int{31}
}

func (x *GetHostSystemSettingsRequest) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

type GetMaintenanceModeStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hostname      string                 `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMaintenanceModeStatusRequest) Reset() {
	*x = GetMaintenanceModeStatusRequest{}
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMaintenanceModeStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMaintenanceModeStatusRequest) ProtoMessage() {}

func (x *GetMaintenanceModeStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMaintenanceModeStatusRequest.ProtoReflect.Descriptor instead.
func (*GetMaintenanceModeStatusRequest) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_frontend_v1_host_service_proto_rawDescGZIP(), []int{32}
}

func (x *GetMaintenanceModeStatusRequest) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

type EnterMaintenanceModeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hostname      string                 `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	EvacuateVms   bool                   `protobuf:"varint,2,opt,name=evacuate_vms,json=evacuateVms,proto3" json:"evacuate_vms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnterMaintenanceModeRequest) Reset() {
	*x = EnterMaintenanceModeRequest{}
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnterMaintenanceModeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnterMaintenanceModeRequest) ProtoMessage() {}

func (x *EnterMaintenanceModeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnterMaintenanceModeRequest.ProtoReflect.Descriptor instead.
func (*EnterMaintenanceModeRequest) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_frontend_v1_host_service_proto_rawDescGZIP(), []int{33}
}

func (x *EnterMaintenanceModeRequest) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *EnterMaintenanceModeRequest) GetEvacuateVms() bool {
	if x != nil {
		return x.EvacuateVms
	}
	return false
}

type ExitMaintenanceModeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hostname      string                 `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExitMaintenanceModeRequest) Reset() {
	*x = ExitMaintenanceModeRequest{}
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExitMaintenanceModeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExitMaintenanceModeRequest) ProtoMessage() {}

func (x *ExitMaintenanceModeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExitMaintenanceModeRequest.ProtoReflect.Descriptor instead.
func (*ExitMaintenanceModeRequest) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_frontend_v1_host_service_proto_rawDescGZIP(), []int{34}
}

func (x *ExitMaintenanceModeRequest) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

type ListHostNetworkInterfacesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hostname      string                 `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListHostNetworkInterfacesRequest) Reset() {
	*x = ListHostNetworkInterfacesRequest{}
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListHostNetworkInterfacesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHostNetworkInterfacesRequest) ProtoMessage() {}

func (x *ListHostNetworkInterfacesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHostNetworkInterfacesRequest.ProtoReflect.Descriptor instead.
func (*ListHostNetworkInterfacesRequest) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_frontend_v1_host_service_proto_rawDescGZIP(), []int{35}
}

func (x *ListHostNetworkInterfacesRequest) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

type UpdateNTPConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hostname      string                 `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	NtpServers    []string               `protobuf:"bytes,2,rep,name=ntp_servers,json=ntpServers,proto3" json:"ntp_servers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNTPConfigRequest) Reset() {
	*x = UpdateNTPConfigRequest{}
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNTPConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNTPConfigRequest) ProtoMessage() {}

func (x *UpdateNTPConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNTPConfigRequest.ProtoReflect.Descriptor instead.
func (*UpdateNTPConfigRequest) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_frontend_v1_host_service_proto_rawDescGZIP(), []int{36}
}

func (x *UpdateNTPConfigRequest) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *UpdateNTPConfigRequest) GetNtpServers() []string {
	if x != nil {
		return x.NtpServers
	}
	return nil
}

type UpdateTimezoneRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hostname      string                 `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Timezone      string                 `protobuf:"bytes,2,opt,name=timezone,proto3" json:"timezone,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTimezoneRequest) Reset() {
	*x = UpdateTimezoneRequest{}
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTimezoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTimezoneRequest) ProtoMessage() {}

func (x *UpdateTimezoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTimezoneRequest.ProtoReflect.Descriptor instead.
func (*UpdateTimezoneRequest) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_frontend_v1_host_service_proto_rawDescGZIP(), []int{37}
}

func (x *UpdateTimezoneRequest) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *UpdateTimezoneRequest) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

type UpdateDNSSettingsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hostname      string                 `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	DnsServers    []string               `protobuf:"bytes,2,rep,name=dns_servers,json=dnsServers,proto3" json:"dns_servers,omitempty"`
	SearchDomains []string               `protobuf:"bytes,3,rep,name=search_domains,json=searchDomains,proto3" json:"search_domains,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDNSSettingsRequest) Reset() {
	*x = UpdateDNSSettingsRequest{}
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDNSSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDNSSettingsRequest) ProtoMessage() {}

func (x *UpdateDNSSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDNSSettingsRequest.ProtoReflect.Descriptor instead.
func (*UpdateDNSSettingsRequest) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_frontend_v1_host_service_proto_rawDescGZIP(), []int{38}
}

func (x *UpdateDNSSettingsRequest) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *UpdateDNSSettingsRequest) GetDnsServers() []string {
	if x != nil {
		return x.DnsServers
	}
	return nil
}

func (x *UpdateDNSSettingsRequest) GetSearchDomains() []string {
	if x != nil {
		return x.SearchDomains
	}
	return nil
}

type UpdateRoutingSettingsRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Hostname       string                 `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	DefaultGateway string                 `protobuf:"bytes,2,opt,name=default_gateway,json=defaultGateway,proto3" json:"default_gateway,omitempty"`
	StaticRoutes   []*StaticRoute         `protobuf:"bytes,3,rep,name=static_routes,json=staticRoutes,proto3" json:"static_routes,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UpdateRoutingSettingsRequest) Reset() {
	*x = UpdateRoutingSettingsRequest{}
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRoutingSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRoutingSettingsRequest) ProtoMessage() {}

func (x *UpdateRoutingSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRoutingSettingsRequest.ProtoReflect.Descriptor instead.
func (*UpdateRoutingSettingsRequest) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_frontend_v1_host_service_proto_rawDescGZIP(), []int{39}
}

func (x *UpdateRoutingSettingsRequest) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *UpdateRoutingSettingsRequest) GetDefaultGateway() string {
	if x != nil {
		return x.DefaultGateway
	}
	return ""
}

func (x *UpdateRoutingSettingsRequest) GetStaticRoutes() []*StaticRoute {
	if x != nil {
		return x.StaticRoutes
	}
	return nil
}

type MountDatastoreRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hostname      string                 `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	DatastoreName string                 `protobuf:"bytes,2,opt,name=datastore_name,json=datastoreName,proto3" json:"datastore_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MountDatastoreRequest) Reset() {
	*x = MountDatastoreRequest{}
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MountDatastoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MountDatastoreRequest) ProtoMessage() {}

func (x *MountDatastoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MountDatastoreRequest.ProtoReflect.Descriptor instead.
func (*MountDatastoreRequest) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_frontend_v1_host_service_proto_rawDescGZIP(), []int{40}
}

func (x *MountDatastoreRequest) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *MountDatastoreRequest) GetDatastoreName() string {
	if x != nil {
		return x.DatastoreName
	}
	return ""
}

type UnmountDatastoreRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hostname      string                 `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	DatastoreName string                 `protobuf:"bytes,2,opt,name=datastore_name,json=datastoreName,proto3" json:"datastore_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnmountDatastoreRequest) Reset() {
	*x = UnmountDatastoreRequest{}
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnmountDatastoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnmountDatastoreRequest) ProtoMessage() {}

func (x *UnmountDatastoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnmountDatastoreRequest.ProtoReflect.Descriptor instead.
func (*UnmountDatastoreRequest) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_frontend_v1_host_service_proto_rawDescGZIP(), []int{41}
}

func (x *UnmountDatastoreRequest) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *UnmountDatastoreRequest) GetDatastoreName() string {
	if x != nil {
		return x.DatastoreName
	}
	return ""
}

type EnableNetworkInterfaceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hostname      string                 `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	InterfaceName string                 `protobuf:"bytes,2,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnableNetworkInterfaceRequest) Reset() {
	*x = EnableNetworkInterfaceRequest{}
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnableNetworkInterfaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableNetworkInterfaceRequest) ProtoMessage() {}

func (x *EnableNetworkInterfaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableNetworkInterfaceRequest.ProtoReflect.Descriptor instead.
func (*EnableNetworkInterfaceRequest) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_frontend_v1_host_service_proto_rawDescGZIP(), []int{42}
}

func (x *EnableNetworkInterfaceRequest) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *EnableNetworkInterfaceRequest) GetInterfaceName() string {
	if x != nil {
		return x.InterfaceName
	}
	return ""
}

type DisableNetworkInterfaceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hostname      string                 `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	InterfaceName string                 `protobuf:"bytes,2,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisableNetworkInterfaceRequest) Reset() {
	*x = DisableNetworkInterfaceRequest{}
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisableNetworkInterfaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableNetworkInterfaceRequest) ProtoMessage() {}

func (x *DisableNetworkInterfaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableNetworkInterfaceRequest.ProtoReflect.Descriptor instead.
func (*DisableNetworkInterfaceRequest) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_frontend_v1_host_service_proto_rawDescGZIP(), []int{43}
}

func (x *DisableNetworkInterfaceRequest) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *DisableNetworkInterfaceRequest) GetInterfaceName() string {
	if x != nil {
		return x.InterfaceName
	}
	return ""
}

type EmptyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmptyResponse) Reset() {
	*x = EmptyResponse{}
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmptyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyResponse) ProtoMessage() {}

func (x *EmptyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyResponse.ProtoReflect.Descriptor instead.
func (*EmptyResponse) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_frontend_v1_host_service_proto_rawDescGZIP(), []int{44}
}

type UpdateNTPConfigResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNTPConfigResponse) Reset() {
	*x = UpdateNTPConfigResponse{}
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNTPConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNTPConfigResponse) ProtoMessage() {}

func (x *UpdateNTPConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNTPConfigResponse.ProtoReflect.Descriptor instead.
func (*UpdateNTPConfigResponse) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_frontend_v1_host_service_proto_rawDescGZIP(), []int{45}
}

type UpdateTimezoneResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTimezoneResponse) Reset() {
	*x = UpdateTimezoneResponse{}
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTimezoneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTimezoneResponse) ProtoMessage() {}

func (x *UpdateTimezoneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTimezoneResponse.ProtoReflect.Descriptor instead.
func (*UpdateTimezoneResponse) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_frontend_v1_host_service_proto_rawDescGZIP(), []int{46}
}

type UpdateDNSSettingsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDNSSettingsResponse) Reset() {
	*x = UpdateDNSSettingsResponse{}
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDNSSettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDNSSettingsResponse) ProtoMessage() {}

func (x *UpdateDNSSettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDNSSettingsResponse.ProtoReflect.Descriptor instead.
func (*UpdateDNSSettingsResponse) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_frontend_v1_host_service_proto_rawDescGZIP(), []int{47}
}

type UpdateRoutingSettingsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRoutingSettingsResponse) Reset() {
	*x = UpdateRoutingSettingsResponse{}
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRoutingSettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRoutingSettingsResponse) ProtoMessage() {}

func (x *UpdateRoutingSettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRoutingSettingsResponse.ProtoReflect.Descriptor instead.
func (*UpdateRoutingSettingsResponse) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_frontend_v1_host_service_proto_rawDescGZIP(), []int{48}
}

type EnterMaintenanceModeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnterMaintenanceModeResponse) Reset() {
	*x = EnterMaintenanceModeResponse{}
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnterMaintenanceModeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnterMaintenanceModeResponse) ProtoMessage() {}

func (x *EnterMaintenanceModeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnterMaintenanceModeResponse.ProtoReflect.Descriptor instead.
func (*EnterMaintenanceModeResponse) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_frontend_v1_host_service_proto_rawDescGZIP(), []int{49}
}

type ExitMaintenanceModeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExitMaintenanceModeResponse) Reset() {
	*x = ExitMaintenanceModeResponse{}
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExitMaintenanceModeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExitMaintenanceModeResponse) ProtoMessage() {}

func (x *ExitMaintenanceModeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExitMaintenanceModeResponse.ProtoReflect.Descriptor instead.
func (*ExitMaintenanceModeResponse) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_frontend_v1_host_service_proto_rawDescGZIP(), []int{50}
}

type MountDatastoreResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MountDatastoreResponse) Reset() {
	*x = MountDatastoreResponse{}
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MountDatastoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MountDatastoreResponse) ProtoMessage() {}

func (x *MountDatastoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MountDatastoreResponse.ProtoReflect.Descriptor instead.
func (*MountDatastoreResponse) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_frontend_v1_host_service_proto_rawDescGZIP(), []int{51}
}

type UnmountDatastoreResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnmountDatastoreResponse) Reset() {
	*x = UnmountDatastoreResponse{}
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnmountDatastoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnmountDatastoreResponse) ProtoMessage() {}

func (x *UnmountDatastoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnmountDatastoreResponse.ProtoReflect.Descriptor instead.
func (*UnmountDatastoreResponse) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_frontend_v1_host_service_proto_rawDescGZIP(), []int{52}
}

type EnableNetworkInterfaceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnableNetworkInterfaceResponse) Reset() {
	*x = EnableNetworkInterfaceResponse{}
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnableNetworkInterfaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableNetworkInterfaceResponse) ProtoMessage() {}

func (x *EnableNetworkInterfaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableNetworkInterfaceResponse.ProtoReflect.Descriptor instead.
func (*EnableNetworkInterfaceResponse) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_frontend_v1_host_service_proto_rawDescGZIP(), []int{53}
}

type DisableNetworkInterfaceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisableNetworkInterfaceResponse) Reset() {
	*x = DisableNetworkInterfaceResponse{}
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisableNetworkInterfaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableNetworkInterfaceResponse) ProtoMessage() {}

func (x *DisableNetworkInterfaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_frontend_v1_host_service_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableNetworkInterfaceResponse.ProtoReflect.Descriptor instead.
func (*DisableNetworkInterfaceResponse) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_frontend_v1_host_service_proto_rawDescGZIP(), []int{54}
}

var File_pilab_cloud_frontend_v1_host_service_proto protoreflect.FileDescriptor

var file_pilab_cloud_frontend_v1_host_service_proto_rawDesc = string([]byte{
	0x0a, 0x2a, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x66, 0x72,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x70, 0x69,
	0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x9a, 0x05, 0x0a, 0x0c, 0x48, 0x6f, 0x73, 0x74, 0x4f, 0x76, 0x65, 0x72,
	0x76, 0x69, 0x65, 0x77, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x66, 0x71, 0x64, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x66, 0x71, 0x64, 0x6e, 0x12, 0x3b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x48,
	0x6f, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x32, 0x0a, 0x06, 0x75, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x75,
	0x70, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x61, 0x6e,
	0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12,
	0x23, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x44, 0x0a, 0x0b, 0x63, 0x70, 0x75, 0x5f, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x69, 0x6c, 0x61,
	0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x50, 0x55, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x0a,
	0x63, 0x70, 0x75, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x4d, 0x0a, 0x0e, 0x6d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x0d, 0x6d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x6d, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x6d, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x10, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x47, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x61, 0x73,
	0x6b, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x0b,
	0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x63, 0x0a, 0x13, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x6c, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x12, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x31, 0x0a, 0x0a, 0x43, 0x50, 0x55, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x23,
	0x0a, 0x0d, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x75, 0x73, 0x61, 0x67, 0x65, 0x50, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x22, 0x34, 0x0a, 0x0d, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x75, 0x73, 0x61,
	0x67, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x22, 0x84, 0x01, 0x0a, 0x0b, 0x54, 0x61,
	0x73, 0x6b, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x22, 0xde, 0x01, 0x0a, 0x19, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x6c, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x38,
	0x0a, 0x03, 0x63, 0x70, 0x75, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x69,
	0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x50, 0x55, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x03, 0x63, 0x70, 0x75, 0x12, 0x41, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x44, 0x0a, 0x07, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70,
	0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x41, 0x6c,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x22, 0x59, 0x0a, 0x0d, 0x43, 0x50, 0x55, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x72, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f,
	0x72, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x61, 0x6c,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x22, 0x50, 0x0a, 0x10,
	0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x67, 0x62, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x47, 0x62, 0x12, 0x21, 0x0a, 0x0c, 0x61,
	0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x67, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x47, 0x62, 0x22, 0x47,
	0x0a, 0x11, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x67, 0x62, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x47, 0x62, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x67, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x64, 0x47, 0x62, 0x22, 0xf9, 0x01, 0x0a, 0x15, 0x4d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08,
	0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0x5d, 0x0a, 0x16, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e,
	0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a,
	0x0b, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x22, 0x5b, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12,
	0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x44, 0x0a, 0x0f, 0x48, 0x6f, 0x73, 0x74, 0x56, 0x4d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x31, 0x0a, 0x03, 0x76, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x4d, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x03, 0x76, 0x6d, 0x73, 0x22, 0xf5, 0x01, 0x0a, 0x06, 0x56, 0x4d, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x56,
	0x4d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x2a, 0x0a, 0x11, 0x63, 0x70, 0x75, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x63, 0x70, 0x75, 0x55,
	0x73, 0x61, 0x67, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x6d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x62, 0x79, 0x74, 0x65,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55,
	0x73, 0x61, 0x67, 0x65, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x06, 0x75, 0x70, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x75, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x67, 0x0a,
	0x17, 0x48, 0x6f, 0x73, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x73,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x79, 0x0a, 0x08, 0x48, 0x6f, 0x73, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x39,
	0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x22, 0x60, 0x0a, 0x16, 0x48, 0x6f, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0a, 0x64,
	0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x73, 0x22, 0xc5, 0x01, 0x0a, 0x0d, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74,
	0x79, 0x5f, 0x67, 0x62, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x61, 0x70, 0x61,
	0x63, 0x69, 0x74, 0x79, 0x47, 0x62, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x67,
	0x62, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x66, 0x72, 0x65, 0x65, 0x47, 0x62, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x97, 0x02, 0x0a, 0x1a,
	0x48, 0x6f, 0x73, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x07, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x69,
	0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x07, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x12, 0x39,
	0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70,
	0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x03, 0x64, 0x6e, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x4e, 0x53, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x03, 0x64, 0x6e,
	0x73, 0x12, 0x42, 0x0a, 0x07, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x75,
	0x74, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x07, 0x72, 0x6f,
	0x75, 0x74, 0x69, 0x6e, 0x67, 0x22, 0xdc, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73,
	0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73,
	0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x61, 0x6e,
	0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12,
	0x23, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x69, 0x6f, 0x73, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x69, 0x6f, 0x73,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x11, 0x6d, 0x6f, 0x74, 0x68, 0x65,
	0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x6d, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x22, 0x8b, 0x01, 0x0a, 0x0c, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x74, 0x70, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x74, 0x70, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x12, 0x3e, 0x0a, 0x1b, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73,
	0x79, 0x6e, 0x63, 0x68, 0x72, 0x6f, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x74, 0x69, 0x6d,
	0x65, 0x53, 0x79, 0x6e, 0x63, 0x68, 0x72, 0x6f, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f,
	0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f,
	0x6e, 0x65, 0x22, 0x55, 0x0a, 0x0b, 0x44, 0x4e, 0x53, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x6e, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x6e, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x22, 0x85, 0x01, 0x0a, 0x0f, 0x52, 0x6f,
	0x75, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x27, 0x0a,
	0x0f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x47,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x12, 0x49, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63,
	0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x73, 0x22, 0x67, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x12, 0x1c, 0x0a, 0x09,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x22, 0x54, 0x0a, 0x1d, 0x4d, 0x61,
	0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x16, 0x69,
	0x73, 0x5f, 0x69, 0x6e, 0x5f, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x69, 0x73, 0x49,
	0x6e, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65,
	0x22, 0x6e, 0x0a, 0x1d, 0x48, 0x6f, 0x73, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4d, 0x0a, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73,
	0x22, 0x86, 0x02, 0x0a, 0x14, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x47, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e,
	0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x73,
	0x70, 0x65, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x69, 0x6e, 0x6b,
	0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x75, 0x70, 0x6c, 0x65, 0x78, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x75, 0x70, 0x6c, 0x65, 0x78, 0x12, 0x1f, 0x0a,
	0x0b, 0x6d, 0x61, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x70,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x34, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x48, 0x6f, 0x73, 0x74, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0xfa, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e,
	0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x38, 0x0a, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x30, 0x0a, 0x12,
	0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x56, 0x4d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x37,
	0x0a, 0x19, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x68,
	0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68,
	0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x37, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x48,
	0x6f, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x3a, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3d, 0x0a, 0x1f,
	0x47, 0x65, 0x74, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x5c, 0x0a, 0x1b, 0x45,
	0x6e, 0x74, 0x65, 0x72, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x4d,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f,
	0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f,
	0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x76, 0x61, 0x63, 0x75, 0x61,
	0x74, 0x65, 0x5f, 0x76, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x65, 0x76,
	0x61, 0x63, 0x75, 0x61, 0x74, 0x65, 0x56, 0x6d, 0x73, 0x22, 0x38, 0x0a, 0x1a, 0x45, 0x78, 0x69,
	0x74, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x3e, 0x0a, 0x20, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x55, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x54, 0x50,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x74, 0x70,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a,
	0x6e, 0x74, 0x70, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x22, 0x4f, 0x0a, 0x15, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x22, 0x7e, 0x0a, 0x18, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x4e, 0x53, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x6e, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x6e, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x22, 0xae, 0x01, 0x0a, 0x1c,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x12, 0x49, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x5f, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x0c,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x22, 0x5a, 0x0a, 0x15,
	0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x5c, 0x0a, 0x17, 0x55, 0x6e, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x62, 0x0a, 0x1d, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x63, 0x0a, 0x1e, 0x44, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x0f, 0x0a, 0x0d, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x19, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x54, 0x50, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x0a, 0x16, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44,
	0x4e, 0x53, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x1f, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74,
	0x69, 0x6e, 0x67, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x1e, 0x0a, 0x1c, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x4d, 0x61, 0x69, 0x6e,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x1d, 0x0a, 0x1b, 0x45, 0x78, 0x69, 0x74, 0x4d, 0x61, 0x69, 0x6e, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x18, 0x0a, 0x16, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x0a, 0x18,
	0x55, 0x6e, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x0a, 0x1e, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x0a, 0x1f, 0x44, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x7f, 0x0a,
	0x0a, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x17, 0x48,
	0x4f, 0x53, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x48, 0x4f, 0x53, 0x54,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x45,
	0x44, 0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x48, 0x4f, 0x53, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10,
	0x02, 0x12, 0x1b, 0x0a, 0x17, 0x48, 0x4f, 0x53, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x4d, 0x41, 0x49, 0x4e, 0x54, 0x45, 0x4e, 0x41, 0x4e, 0x43, 0x45, 0x10, 0x03, 0x2a, 0x9b,
	0x01, 0x0a, 0x08, 0x56, 0x4d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x15, 0x56,
	0x4d, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x56, 0x4d, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x15, 0x0a,
	0x11, 0x56, 0x4d, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x54, 0x4f, 0x50, 0x50,
	0x45, 0x44, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x56, 0x4d, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x50, 0x41, 0x55, 0x53, 0x45, 0x44, 0x10, 0x03, 0x12, 0x1b, 0x0a, 0x17, 0x56, 0x4d,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x48, 0x55, 0x54, 0x54, 0x49, 0x4e, 0x47,
	0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x56, 0x4d, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x05, 0x2a, 0x5f, 0x0a, 0x0d,
	0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a,
	0x1a, 0x44, 0x41, 0x54, 0x41, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a,
	0x12, 0x44, 0x41, 0x54, 0x41, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x4c, 0x56, 0x4d, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x44, 0x41, 0x54, 0x41, 0x53, 0x54, 0x4f,
	0x52, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x46, 0x53, 0x10, 0x02, 0x2a, 0x6b, 0x0a,
	0x16, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x16, 0x4e, 0x49, 0x43, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x4e, 0x49, 0x43, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x1b, 0x0a,
	0x17, 0x4e, 0x49, 0x43, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x44, 0x49, 0x53, 0x43,
	0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x02, 0x32, 0xf2, 0x11, 0x0a, 0x0b, 0x48,
	0x6f, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x69, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x48, 0x6f, 0x73, 0x74, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x12, 0x2f, 0x2e,
	0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x4f,
	0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25,
	0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x4f, 0x76, 0x65,
	0x72, 0x76, 0x69, 0x65, 0x77, 0x12, 0x77, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x31, 0x2e, 0x70, 0x69, 0x6c,
	0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69,
	0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e,
	0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69,
	0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64,
	0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x56, 0x4d, 0x73, 0x12, 0x2b, 0x2e,
	0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x73, 0x74,
	0x56, 0x4d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x70, 0x69, 0x6c,
	0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x56, 0x4d, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7a, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x32, 0x2e, 0x70, 0x69, 0x6c,
	0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30,
	0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x79, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x32, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x70, 0x69, 0x6c,
	0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x71, 0x0a, 0x0e, 0x4d,
	0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x2e, 0x2e,
	0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e,
	0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x77,
	0x0a, 0x10, 0x55, 0x6e, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x12, 0x30, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x6e, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x83, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x48,
	0x6f, 0x73, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x12, 0x35, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x48,
	0x6f, 0x73, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x74, 0x0a,
	0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x54, 0x50, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x2f, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4e, 0x54, 0x50, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x30, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4e, 0x54, 0x50, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x71, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x2e, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7a, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x44, 0x4e, 0x53, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x31, 0x2e, 0x70, 0x69,
	0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x4e, 0x53, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32,
	0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44,
	0x4e, 0x53, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x86, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75,
	0x74, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x35, 0x2e, 0x70,
	0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75,
	0x74, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8c, 0x01, 0x0a, 0x18,
	0x47, 0x65, 0x74, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x38, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x36, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x69,
	0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x83, 0x01, 0x0a, 0x14, 0x45,
	0x6e, 0x74, 0x65, 0x72, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x4d,
	0x6f, 0x64, 0x65, 0x12, 0x34, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e,
	0x74, 0x65, 0x72, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x70, 0x69, 0x6c, 0x61,
	0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x80, 0x01, 0x0a, 0x13, 0x45, 0x78, 0x69, 0x74, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x33, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x74, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e,
	0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x74, 0x4d, 0x61, 0x69, 0x6e,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x8e, 0x01, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x73, 0x74,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x73, 0x12, 0x39, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x48, 0x6f, 0x73, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x70,
	0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x89, 0x01, 0x0a, 0x16, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12,
	0x36, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x8c, 0x01, 0x0a, 0x17, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x37, 0x2e, 0x70,
	0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x41, 0x5a, 0x3f, 0x67, 0x6f, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x68, 0x75, 0x2f, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x76, 0x69, 0x72, 0x74, 0x70, 0x62, 0x2f, 0x67, 0x65, 0x6e, 0x2f,
	0x70, 0x69, 0x6c, 0x61, 0x62, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x66, 0x72, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x64, 0x2f, 0x76, 0x31, 0x3b, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64,
	0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_pilab_cloud_frontend_v1_host_service_proto_rawDescOnce sync.Once
	file_pilab_cloud_frontend_v1_host_service_proto_rawDescData []byte
)

func file_pilab_cloud_frontend_v1_host_service_proto_rawDescGZIP() []byte {
	file_pilab_cloud_frontend_v1_host_service_proto_rawDescOnce.Do(func() {
		file_pilab_cloud_frontend_v1_host_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pilab_cloud_frontend_v1_host_service_proto_rawDesc), len(file_pilab_cloud_frontend_v1_host_service_proto_rawDesc)))
	})
	return file_pilab_cloud_frontend_v1_host_service_proto_rawDescData
}

var file_pilab_cloud_frontend_v1_host_service_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_pilab_cloud_frontend_v1_host_service_proto_msgTypes = make([]protoimpl.MessageInfo, 55)
var file_pilab_cloud_frontend_v1_host_service_proto_goTypes = []any{
	(HostStatus)(0),                          // 0: pilab.cloud.director.v1.HostStatus
	(VMStatus)(0),                            // 1: pilab.cloud.director.v1.VMStatus
	(DatastoreType)(0),                       // 2: pilab.cloud.director.v1.DatastoreType
	(NetworkInterfaceStatus)(0),              // 3: pilab.cloud.director.v1.NetworkInterfaceStatus
	(*HostOverview)(nil),                     // 4: pilab.cloud.director.v1.HostOverview
	(*CPUMetrics)(nil),                       // 5: pilab.cloud.director.v1.CPUMetrics
	(*MemoryMetrics)(nil),                    // 6: pilab.cloud.director.v1.MemoryMetrics
	(*TaskSummary)(nil),                      // 7: pilab.cloud.director.v1.TaskSummary
	(*ResourceAllocationSummary)(nil),        // 8: pilab.cloud.director.v1.ResourceAllocationSummary
	(*CPUAllocation)(nil),                    // 9: pilab.cloud.director.v1.CPUAllocation
	(*MemoryAllocation)(nil),                 // 10: pilab.cloud.director.v1.MemoryAllocation
	(*StorageAllocation)(nil),                // 11: pilab.cloud.director.v1.StorageAllocation
	(*MonitoringDataRequest)(nil),            // 12: pilab.cloud.director.v1.MonitoringDataRequest
	(*MonitoringDataResponse)(nil),           // 13: pilab.cloud.director.v1.MonitoringDataResponse
	(*DataPoint)(nil),                        // 14: pilab.cloud.director.v1.DataPoint
	(*HostVMsResponse)(nil),                  // 15: pilab.cloud.director.v1.HostVMsResponse
	(*VMInfo)(nil),                           // 16: pilab.cloud.director.v1.VMInfo
	(*HostPermissionsResponse)(nil),          // 17: pilab.cloud.director.v1.HostPermissionsResponse
	(*HostUser)(nil),                         // 18: pilab.cloud.director.v1.HostUser
	(*HostDatastoresResponse)(nil),           // 19: pilab.cloud.director.v1.HostDatastoresResponse
	(*DatastoreInfo)(nil),                    // 20: pilab.cloud.director.v1.DatastoreInfo
	(*HostSystemSettingsResponse)(nil),       // 21: pilab.cloud.director.v1.HostSystemSettingsResponse
	(*GeneralSettings)(nil),                  // 22: pilab.cloud.director.v1.GeneralSettings
	(*TimeSettings)(nil),                     // 23: pilab.cloud.director.v1.TimeSettings
	(*DNSSettings)(nil),                      // 24: pilab.cloud.director.v1.DNSSettings
	(*RoutingSettings)(nil),                  // 25: pilab.cloud.director.v1.RoutingSettings
	(*StaticRoute)(nil),                      // 26: pilab.cloud.director.v1.StaticRoute
	(*MaintenanceModeStatusResponse)(nil),    // 27: pilab.cloud.director.v1.MaintenanceModeStatusResponse
	(*HostNetworkInterfacesResponse)(nil),    // 28: pilab.cloud.director.v1.HostNetworkInterfacesResponse
	(*NetworkInterfaceInfo)(nil),             // 29: pilab.cloud.director.v1.NetworkInterfaceInfo
	(*GetHostOverviewRequest)(nil),           // 30: pilab.cloud.director.v1.GetHostOverviewRequest
	(*GetMonitoringDataRequest)(nil),         // 31: pilab.cloud.director.v1.GetMonitoringDataRequest
	(*ListHostVMsRequest)(nil),               // 32: pilab.cloud.director.v1.ListHostVMsRequest
	(*GetHostPermissionsRequest)(nil),        // 33: pilab.cloud.director.v1.GetHostPermissionsRequest
	(*ListHostDatastoresRequest)(nil),        // 34: pilab.cloud.director.v1.ListHostDatastoresRequest
	(*GetHostSystemSettingsRequest)(nil),     // 35: pilab.cloud.director.v1.GetHostSystemSettingsRequest
	(*GetMaintenanceModeStatusRequest)(nil),  // 36: pilab.cloud.director.v1.GetMaintenanceModeStatusRequest
	(*EnterMaintenanceModeRequest)(nil),      // 37: pilab.cloud.director.v1.EnterMaintenanceModeRequest
	(*ExitMaintenanceModeRequest)(nil),       // 38: pilab.cloud.director.v1.ExitMaintenanceModeRequest
	(*ListHostNetworkInterfacesRequest)(nil), // 39: pilab.cloud.director.v1.ListHostNetworkInterfacesRequest
	(*UpdateNTPConfigRequest)(nil),           // 40: pilab.cloud.director.v1.UpdateNTPConfigRequest
	(*UpdateTimezoneRequest)(nil),            // 41: pilab.cloud.director.v1.UpdateTimezoneRequest
	(*UpdateDNSSettingsRequest)(nil),         // 42: pilab.cloud.director.v1.UpdateDNSSettingsRequest
	(*UpdateRoutingSettingsRequest)(nil),     // 43: pilab.cloud.director.v1.UpdateRoutingSettingsRequest
	(*MountDatastoreRequest)(nil),            // 44: pilab.cloud.director.v1.MountDatastoreRequest
	(*UnmountDatastoreRequest)(nil),          // 45: pilab.cloud.director.v1.UnmountDatastoreRequest
	(*EnableNetworkInterfaceRequest)(nil),    // 46: pilab.cloud.director.v1.EnableNetworkInterfaceRequest
	(*DisableNetworkInterfaceRequest)(nil),   // 47: pilab.cloud.director.v1.DisableNetworkInterfaceRequest
	(*EmptyResponse)(nil),                    // 48: pilab.cloud.director.v1.EmptyResponse
	(*UpdateNTPConfigResponse)(nil),          // 49: pilab.cloud.director.v1.UpdateNTPConfigResponse
	(*UpdateTimezoneResponse)(nil),           // 50: pilab.cloud.director.v1.UpdateTimezoneResponse
	(*UpdateDNSSettingsResponse)(nil),        // 51: pilab.cloud.director.v1.UpdateDNSSettingsResponse
	(*UpdateRoutingSettingsResponse)(nil),    // 52: pilab.cloud.director.v1.UpdateRoutingSettingsResponse
	(*EnterMaintenanceModeResponse)(nil),     // 53: pilab.cloud.director.v1.EnterMaintenanceModeResponse
	(*ExitMaintenanceModeResponse)(nil),      // 54: pilab.cloud.director.v1.ExitMaintenanceModeResponse
	(*MountDatastoreResponse)(nil),           // 55: pilab.cloud.director.v1.MountDatastoreResponse
	(*UnmountDatastoreResponse)(nil),         // 56: pilab.cloud.director.v1.UnmountDatastoreResponse
	(*EnableNetworkInterfaceResponse)(nil),   // 57: pilab.cloud.director.v1.EnableNetworkInterfaceResponse
	(*DisableNetworkInterfaceResponse)(nil),  // 58: pilab.cloud.director.v1.DisableNetworkInterfaceResponse
	(*timestamppb.Timestamp)(nil),            // 59: google.protobuf.Timestamp
}
var file_pilab_cloud_frontend_v1_host_service_proto_depIdxs = []int32{
	0,  // 0: pilab.cloud.director.v1.HostOverview.status:type_name -> pilab.cloud.director.v1.HostStatus
	59, // 1: pilab.cloud.director.v1.HostOverview.uptime:type_name -> google.protobuf.Timestamp
	5,  // 2: pilab.cloud.director.v1.HostOverview.cpu_metrics:type_name -> pilab.cloud.director.v1.CPUMetrics
	6,  // 3: pilab.cloud.director.v1.HostOverview.memory_metrics:type_name -> pilab.cloud.director.v1.MemoryMetrics
	7,  // 4: pilab.cloud.director.v1.HostOverview.recent_tasks:type_name -> pilab.cloud.director.v1.TaskSummary
	8,  // 5: pilab.cloud.director.v1.HostOverview.resource_allocation:type_name -> pilab.cloud.director.v1.ResourceAllocationSummary
	59, // 6: pilab.cloud.director.v1.TaskSummary.created_at:type_name -> google.protobuf.Timestamp
	9,  // 7: pilab.cloud.director.v1.ResourceAllocationSummary.cpu:type_name -> pilab.cloud.director.v1.CPUAllocation
	10, // 8: pilab.cloud.director.v1.ResourceAllocationSummary.memory:type_name -> pilab.cloud.director.v1.MemoryAllocation
	11, // 9: pilab.cloud.director.v1.ResourceAllocationSummary.storage:type_name -> pilab.cloud.director.v1.StorageAllocation
	59, // 10: pilab.cloud.director.v1.MonitoringDataRequest.start_time:type_name -> google.protobuf.Timestamp
	59, // 11: pilab.cloud.director.v1.MonitoringDataRequest.end_time:type_name -> google.protobuf.Timestamp
	14, // 12: pilab.cloud.director.v1.MonitoringDataResponse.data_points:type_name -> pilab.cloud.director.v1.DataPoint
	59, // 13: pilab.cloud.director.v1.DataPoint.timestamp:type_name -> google.protobuf.Timestamp
	16, // 14: pilab.cloud.director.v1.HostVMsResponse.vms:type_name -> pilab.cloud.director.v1.VMInfo
	1,  // 15: pilab.cloud.director.v1.VMInfo.status:type_name -> pilab.cloud.director.v1.VMStatus
	59, // 16: pilab.cloud.director.v1.VMInfo.uptime:type_name -> google.protobuf.Timestamp
	18, // 17: pilab.cloud.director.v1.HostPermissionsResponse.user_permissions:type_name -> pilab.cloud.director.v1.HostUser
	59, // 18: pilab.cloud.director.v1.HostUser.last_login:type_name -> google.protobuf.Timestamp
	20, // 19: pilab.cloud.director.v1.HostDatastoresResponse.datastores:type_name -> pilab.cloud.director.v1.DatastoreInfo
	2,  // 20: pilab.cloud.director.v1.DatastoreInfo.type:type_name -> pilab.cloud.director.v1.DatastoreType
	22, // 21: pilab.cloud.director.v1.HostSystemSettingsResponse.general:type_name -> pilab.cloud.director.v1.GeneralSettings
	23, // 22: pilab.cloud.director.v1.HostSystemSettingsResponse.time:type_name -> pilab.cloud.director.v1.TimeSettings
	24, // 23: pilab.cloud.director.v1.HostSystemSettingsResponse.dns:type_name -> pilab.cloud.director.v1.DNSSettings
	25, // 24: pilab.cloud.director.v1.HostSystemSettingsResponse.routing:type_name -> pilab.cloud.director.v1.RoutingSettings
	26, // 25: pilab.cloud.director.v1.RoutingSettings.static_routes:type_name -> pilab.cloud.director.v1.StaticRoute
	29, // 26: pilab.cloud.director.v1.HostNetworkInterfacesResponse.interfaces:type_name -> pilab.cloud.director.v1.NetworkInterfaceInfo
	3,  // 27: pilab.cloud.director.v1.NetworkInterfaceInfo.status:type_name -> pilab.cloud.director.v1.NetworkInterfaceStatus
	59, // 28: pilab.cloud.director.v1.GetMonitoringDataRequest.startTime:type_name -> google.protobuf.Timestamp
	59, // 29: pilab.cloud.director.v1.GetMonitoringDataRequest.endTime:type_name -> google.protobuf.Timestamp
	26, // 30: pilab.cloud.director.v1.UpdateRoutingSettingsRequest.static_routes:type_name -> pilab.cloud.director.v1.StaticRoute
	30, // 31: pilab.cloud.director.v1.HostService.GetHostOverview:input_type -> pilab.cloud.director.v1.GetHostOverviewRequest
	31, // 32: pilab.cloud.director.v1.HostService.GetMonitoringData:input_type -> pilab.cloud.director.v1.GetMonitoringDataRequest
	32, // 33: pilab.cloud.director.v1.HostService.ListHostVMs:input_type -> pilab.cloud.director.v1.ListHostVMsRequest
	33, // 34: pilab.cloud.director.v1.HostService.GetHostPermissions:input_type -> pilab.cloud.director.v1.GetHostPermissionsRequest
	34, // 35: pilab.cloud.director.v1.HostService.ListHostDatastores:input_type -> pilab.cloud.director.v1.ListHostDatastoresRequest
	44, // 36: pilab.cloud.director.v1.HostService.MountDatastore:input_type -> pilab.cloud.director.v1.MountDatastoreRequest
	45, // 37: pilab.cloud.director.v1.HostService.UnmountDatastore:input_type -> pilab.cloud.director.v1.UnmountDatastoreRequest
	35, // 38: pilab.cloud.director.v1.HostService.GetHostSystemSettings:input_type -> pilab.cloud.director.v1.GetHostSystemSettingsRequest
	40, // 39: pilab.cloud.director.v1.HostService.UpdateNTPConfig:input_type -> pilab.cloud.director.v1.UpdateNTPConfigRequest
	41, // 40: pilab.cloud.director.v1.HostService.UpdateTimezone:input_type -> pilab.cloud.director.v1.UpdateTimezoneRequest
	42, // 41: pilab.cloud.director.v1.HostService.UpdateDNSSettings:input_type -> pilab.cloud.director.v1.UpdateDNSSettingsRequest
	43, // 42: pilab.cloud.director.v1.HostService.UpdateRoutingSettings:input_type -> pilab.cloud.director.v1.UpdateRoutingSettingsRequest
	36, // 43: pilab.cloud.director.v1.HostService.GetMaintenanceModeStatus:input_type -> pilab.cloud.director.v1.GetMaintenanceModeStatusRequest
	37, // 44: pilab.cloud.director.v1.HostService.EnterMaintenanceMode:input_type -> pilab.cloud.director.v1.EnterMaintenanceModeRequest
	38, // 45: pilab.cloud.director.v1.HostService.ExitMaintenanceMode:input_type -> pilab.cloud.director.v1.ExitMaintenanceModeRequest
	39, // 46: pilab.cloud.director.v1.HostService.ListHostNetworkInterfaces:input_type -> pilab.cloud.director.v1.ListHostNetworkInterfacesRequest
	46, // 47: pilab.cloud.director.v1.HostService.EnableNetworkInterface:input_type -> pilab.cloud.director.v1.EnableNetworkInterfaceRequest
	47, // 48: pilab.cloud.director.v1.HostService.DisableNetworkInterface:input_type -> pilab.cloud.director.v1.DisableNetworkInterfaceRequest
	4,  // 49: pilab.cloud.director.v1.HostService.GetHostOverview:output_type -> pilab.cloud.director.v1.HostOverview
	13, // 50: pilab.cloud.director.v1.HostService.GetMonitoringData:output_type -> pilab.cloud.director.v1.MonitoringDataResponse
	15, // 51: pilab.cloud.director.v1.HostService.ListHostVMs:output_type -> pilab.cloud.director.v1.HostVMsResponse
	17, // 52: pilab.cloud.director.v1.HostService.GetHostPermissions:output_type -> pilab.cloud.director.v1.HostPermissionsResponse
	19, // 53: pilab.cloud.director.v1.HostService.ListHostDatastores:output_type -> pilab.cloud.director.v1.HostDatastoresResponse
	55, // 54: pilab.cloud.director.v1.HostService.MountDatastore:output_type -> pilab.cloud.director.v1.MountDatastoreResponse
	56, // 55: pilab.cloud.director.v1.HostService.UnmountDatastore:output_type -> pilab.cloud.director.v1.UnmountDatastoreResponse
	21, // 56: pilab.cloud.director.v1.HostService.GetHostSystemSettings:output_type -> pilab.cloud.director.v1.HostSystemSettingsResponse
	49, // 57: pilab.cloud.director.v1.HostService.UpdateNTPConfig:output_type -> pilab.cloud.director.v1.UpdateNTPConfigResponse
	50, // 58: pilab.cloud.director.v1.HostService.UpdateTimezone:output_type -> pilab.cloud.director.v1.UpdateTimezoneResponse
	51, // 59: pilab.cloud.director.v1.HostService.UpdateDNSSettings:output_type -> pilab.cloud.director.v1.UpdateDNSSettingsResponse
	52, // 60: pilab.cloud.director.v1.HostService.UpdateRoutingSettings:output_type -> pilab.cloud.director.v1.UpdateRoutingSettingsResponse
	27, // 61: pilab.cloud.director.v1.HostService.GetMaintenanceModeStatus:output_type -> pilab.cloud.director.v1.MaintenanceModeStatusResponse
	53, // 62: pilab.cloud.director.v1.HostService.EnterMaintenanceMode:output_type -> pilab.cloud.director.v1.EnterMaintenanceModeResponse
	54, // 63: pilab.cloud.director.v1.HostService.ExitMaintenanceMode:output_type -> pilab.cloud.director.v1.ExitMaintenanceModeResponse
	28, // 64: pilab.cloud.director.v1.HostService.ListHostNetworkInterfaces:output_type -> pilab.cloud.director.v1.HostNetworkInterfacesResponse
	57, // 65: pilab.cloud.director.v1.HostService.EnableNetworkInterface:output_type -> pilab.cloud.director.v1.EnableNetworkInterfaceResponse
	58, // 66: pilab.cloud.director.v1.HostService.DisableNetworkInterface:output_type -> pilab.cloud.director.v1.DisableNetworkInterfaceResponse
	49, // [49:67] is the sub-list for method output_type
	31, // [31:49] is the sub-list for method input_type
	31, // [31:31] is the sub-list for extension type_name
	31, // [31:31] is the sub-list for extension extendee
	0,  // [0:31] is the sub-list for field type_name
}

func init() { file_pilab_cloud_frontend_v1_host_service_proto_init() }
func file_pilab_cloud_frontend_v1_host_service_proto_init() {
	if File_pilab_cloud_frontend_v1_host_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pilab_cloud_frontend_v1_host_service_proto_rawDesc), len(file_pilab_cloud_frontend_v1_host_service_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   55,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pilab_cloud_frontend_v1_host_service_proto_goTypes,
		DependencyIndexes: file_pilab_cloud_frontend_v1_host_service_proto_depIdxs,
		EnumInfos:         file_pilab_cloud_frontend_v1_host_service_proto_enumTypes,
		MessageInfos:      file_pilab_cloud_frontend_v1_host_service_proto_msgTypes,
	}.Build()
	File_pilab_cloud_frontend_v1_host_service_proto = out.File
	file_pilab_cloud_frontend_v1_host_service_proto_goTypes = nil
	file_pilab_cloud_frontend_v1_host_service_proto_depIdxs = nil
}
