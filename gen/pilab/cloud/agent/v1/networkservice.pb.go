// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        (unknown)
// source: pilab/cloud/agent/v1/networkservice.proto

package agentv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// OVS Bridge Messages
type OvsBridge struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` // Add other relevant bridge details
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OvsBridge) Reset() {
	*x = OvsBridge{}
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OvsBridge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OvsBridge) ProtoMessage() {}

func (x *OvsBridge) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OvsBridge.ProtoReflect.Descriptor instead.
func (*OvsBridge) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_agent_v1_networkservice_proto_rawDescGZIP(), []int{0}
}

func (x *OvsBridge) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type OvsBridgeCreateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` // Optional: Other bridge configuration options
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OvsBridgeCreateRequest) Reset() {
	*x = OvsBridgeCreateRequest{}
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OvsBridgeCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OvsBridgeCreateRequest) ProtoMessage() {}

func (x *OvsBridgeCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OvsBridgeCreateRequest.ProtoReflect.Descriptor instead.
func (*OvsBridgeCreateRequest) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_agent_v1_networkservice_proto_rawDescGZIP(), []int{1}
}

func (x *OvsBridgeCreateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type OvsBridgeCreateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         *ErrorResponse         `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
	Bridge        *OvsBridge             `protobuf:"bytes,3,opt,name=bridge,proto3,oneof" json:"bridge,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OvsBridgeCreateResponse) Reset() {
	*x = OvsBridgeCreateResponse{}
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OvsBridgeCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OvsBridgeCreateResponse) ProtoMessage() {}

func (x *OvsBridgeCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OvsBridgeCreateResponse.ProtoReflect.Descriptor instead.
func (*OvsBridgeCreateResponse) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_agent_v1_networkservice_proto_rawDescGZIP(), []int{2}
}

func (x *OvsBridgeCreateResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *OvsBridgeCreateResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *OvsBridgeCreateResponse) GetBridge() *OvsBridge {
	if x != nil {
		return x.Bridge
	}
	return nil
}

type OvsBridgeDeleteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OvsBridgeDeleteRequest) Reset() {
	*x = OvsBridgeDeleteRequest{}
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OvsBridgeDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OvsBridgeDeleteRequest) ProtoMessage() {}

func (x *OvsBridgeDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OvsBridgeDeleteRequest.ProtoReflect.Descriptor instead.
func (*OvsBridgeDeleteRequest) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_agent_v1_networkservice_proto_rawDescGZIP(), []int{3}
}

func (x *OvsBridgeDeleteRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type OvsBridgeDeleteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         *ErrorResponse         `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OvsBridgeDeleteResponse) Reset() {
	*x = OvsBridgeDeleteResponse{}
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OvsBridgeDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OvsBridgeDeleteResponse) ProtoMessage() {}

func (x *OvsBridgeDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OvsBridgeDeleteResponse.ProtoReflect.Descriptor instead.
func (*OvsBridgeDeleteResponse) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_agent_v1_networkservice_proto_rawDescGZIP(), []int{4}
}

func (x *OvsBridgeDeleteResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *OvsBridgeDeleteResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type OvsBridgeListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OvsBridgeListRequest) Reset() {
	*x = OvsBridgeListRequest{}
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OvsBridgeListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OvsBridgeListRequest) ProtoMessage() {}

func (x *OvsBridgeListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OvsBridgeListRequest.ProtoReflect.Descriptor instead.
func (*OvsBridgeListRequest) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_agent_v1_networkservice_proto_rawDescGZIP(), []int{5}
}

type OvsBridgeListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Bridges       []*OvsBridge           `protobuf:"bytes,1,rep,name=bridges,proto3" json:"bridges,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OvsBridgeListResponse) Reset() {
	*x = OvsBridgeListResponse{}
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OvsBridgeListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OvsBridgeListResponse) ProtoMessage() {}

func (x *OvsBridgeListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OvsBridgeListResponse.ProtoReflect.Descriptor instead.
func (*OvsBridgeListResponse) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_agent_v1_networkservice_proto_rawDescGZIP(), []int{6}
}

func (x *OvsBridgeListResponse) GetBridges() []*OvsBridge {
	if x != nil {
		return x.Bridges
	}
	return nil
}

type OvsBridgeGetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OvsBridgeGetRequest) Reset() {
	*x = OvsBridgeGetRequest{}
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OvsBridgeGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OvsBridgeGetRequest) ProtoMessage() {}

func (x *OvsBridgeGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OvsBridgeGetRequest.ProtoReflect.Descriptor instead.
func (*OvsBridgeGetRequest) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_agent_v1_networkservice_proto_rawDescGZIP(), []int{7}
}

func (x *OvsBridgeGetRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type OvsBridgeGetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Bridge        *OvsBridge             `protobuf:"bytes,1,opt,name=bridge,proto3,oneof" json:"bridge,omitempty"`
	Error         *ErrorResponse         `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OvsBridgeGetResponse) Reset() {
	*x = OvsBridgeGetResponse{}
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OvsBridgeGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OvsBridgeGetResponse) ProtoMessage() {}

func (x *OvsBridgeGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OvsBridgeGetResponse.ProtoReflect.Descriptor instead.
func (*OvsBridgeGetResponse) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_agent_v1_networkservice_proto_rawDescGZIP(), []int{8}
}

func (x *OvsBridgeGetResponse) GetBridge() *OvsBridge {
	if x != nil {
		return x.Bridge
	}
	return nil
}

func (x *OvsBridgeGetResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

// OVS Port Messages
type OvsPort struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	Name       string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	BridgeName string                 `protobuf:"bytes,2,opt,name=bridge_name,json=bridgeName,proto3" json:"bridge_name,omitempty"`
	// VM interface association (how to represent this is key)
	InterfaceName *string `protobuf:"bytes,3,opt,name=interface_name,json=interfaceName,proto3,oneof" json:"interface_name,omitempty"` // Could be the name of the VM's NIC
	// Other port details like VLAN tags, etc.
	VlanTags      []string `protobuf:"bytes,4,rep,name=vlan_tags,json=vlanTags,proto3" json:"vlan_tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OvsPort) Reset() {
	*x = OvsPort{}
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OvsPort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OvsPort) ProtoMessage() {}

func (x *OvsPort) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OvsPort.ProtoReflect.Descriptor instead.
func (*OvsPort) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_agent_v1_networkservice_proto_rawDescGZIP(), []int{9}
}

func (x *OvsPort) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OvsPort) GetBridgeName() string {
	if x != nil {
		return x.BridgeName
	}
	return ""
}

func (x *OvsPort) GetInterfaceName() string {
	if x != nil && x.InterfaceName != nil {
		return *x.InterfaceName
	}
	return ""
}

func (x *OvsPort) GetVlanTags() []string {
	if x != nil {
		return x.VlanTags
	}
	return nil
}

type OvsPortCreateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BridgeName    string                 `protobuf:"bytes,1,opt,name=bridge_name,json=bridgeName,proto3" json:"bridge_name,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	InterfaceName *string                `protobuf:"bytes,3,opt,name=interface_name,json=interfaceName,proto3,oneof" json:"interface_name,omitempty"`
	VlanTags      []string               `protobuf:"bytes,4,rep,name=vlan_tags,json=vlanTags,proto3" json:"vlan_tags,omitempty"` // Add other port-specific options
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OvsPortCreateRequest) Reset() {
	*x = OvsPortCreateRequest{}
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OvsPortCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OvsPortCreateRequest) ProtoMessage() {}

func (x *OvsPortCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OvsPortCreateRequest.ProtoReflect.Descriptor instead.
func (*OvsPortCreateRequest) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_agent_v1_networkservice_proto_rawDescGZIP(), []int{10}
}

func (x *OvsPortCreateRequest) GetBridgeName() string {
	if x != nil {
		return x.BridgeName
	}
	return ""
}

func (x *OvsPortCreateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OvsPortCreateRequest) GetInterfaceName() string {
	if x != nil && x.InterfaceName != nil {
		return *x.InterfaceName
	}
	return ""
}

func (x *OvsPortCreateRequest) GetVlanTags() []string {
	if x != nil {
		return x.VlanTags
	}
	return nil
}

type OvsPortCreateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         *ErrorResponse         `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
	Port          *OvsPort               `protobuf:"bytes,3,opt,name=port,proto3,oneof" json:"port,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OvsPortCreateResponse) Reset() {
	*x = OvsPortCreateResponse{}
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OvsPortCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OvsPortCreateResponse) ProtoMessage() {}

func (x *OvsPortCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OvsPortCreateResponse.ProtoReflect.Descriptor instead.
func (*OvsPortCreateResponse) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_agent_v1_networkservice_proto_rawDescGZIP(), []int{11}
}

func (x *OvsPortCreateResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *OvsPortCreateResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *OvsPortCreateResponse) GetPort() *OvsPort {
	if x != nil {
		return x.Port
	}
	return nil
}

type OvsPortDeleteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OvsPortDeleteRequest) Reset() {
	*x = OvsPortDeleteRequest{}
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OvsPortDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OvsPortDeleteRequest) ProtoMessage() {}

func (x *OvsPortDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OvsPortDeleteRequest.ProtoReflect.Descriptor instead.
func (*OvsPortDeleteRequest) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_agent_v1_networkservice_proto_rawDescGZIP(), []int{12}
}

func (x *OvsPortDeleteRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type OvsPortDeleteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         *ErrorResponse         `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OvsPortDeleteResponse) Reset() {
	*x = OvsPortDeleteResponse{}
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OvsPortDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OvsPortDeleteResponse) ProtoMessage() {}

func (x *OvsPortDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OvsPortDeleteResponse.ProtoReflect.Descriptor instead.
func (*OvsPortDeleteResponse) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_agent_v1_networkservice_proto_rawDescGZIP(), []int{13}
}

func (x *OvsPortDeleteResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *OvsPortDeleteResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type OvsPortListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BridgeName    *string                `protobuf:"bytes,1,opt,name=bridge_name,json=bridgeName,proto3,oneof" json:"bridge_name,omitempty"` // List ports for a specific bridge
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OvsPortListRequest) Reset() {
	*x = OvsPortListRequest{}
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OvsPortListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OvsPortListRequest) ProtoMessage() {}

func (x *OvsPortListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OvsPortListRequest.ProtoReflect.Descriptor instead.
func (*OvsPortListRequest) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_agent_v1_networkservice_proto_rawDescGZIP(), []int{14}
}

func (x *OvsPortListRequest) GetBridgeName() string {
	if x != nil && x.BridgeName != nil {
		return *x.BridgeName
	}
	return ""
}

type OvsPortListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ports         []*OvsPort             `protobuf:"bytes,1,rep,name=ports,proto3" json:"ports,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OvsPortListResponse) Reset() {
	*x = OvsPortListResponse{}
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OvsPortListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OvsPortListResponse) ProtoMessage() {}

func (x *OvsPortListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OvsPortListResponse.ProtoReflect.Descriptor instead.
func (*OvsPortListResponse) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_agent_v1_networkservice_proto_rawDescGZIP(), []int{15}
}

func (x *OvsPortListResponse) GetPorts() []*OvsPort {
	if x != nil {
		return x.Ports
	}
	return nil
}

type OvsPortGetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OvsPortGetRequest) Reset() {
	*x = OvsPortGetRequest{}
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OvsPortGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OvsPortGetRequest) ProtoMessage() {}

func (x *OvsPortGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OvsPortGetRequest.ProtoReflect.Descriptor instead.
func (*OvsPortGetRequest) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_agent_v1_networkservice_proto_rawDescGZIP(), []int{16}
}

func (x *OvsPortGetRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type OvsPortGetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Port          *OvsPort               `protobuf:"bytes,1,opt,name=port,proto3,oneof" json:"port,omitempty"`
	Error         *ErrorResponse         `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OvsPortGetResponse) Reset() {
	*x = OvsPortGetResponse{}
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OvsPortGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OvsPortGetResponse) ProtoMessage() {}

func (x *OvsPortGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OvsPortGetResponse.ProtoReflect.Descriptor instead.
func (*OvsPortGetResponse) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_agent_v1_networkservice_proto_rawDescGZIP(), []int{17}
}

func (x *OvsPortGetResponse) GetPort() *OvsPort {
	if x != nil {
		return x.Port
	}
	return nil
}

func (x *OvsPortGetResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type OvsPortUpdateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	VlanTags      []string               `protobuf:"bytes,2,rep,name=vlan_tags,json=vlanTags,proto3" json:"vlan_tags,omitempty"` // Example of an update
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OvsPortUpdateRequest) Reset() {
	*x = OvsPortUpdateRequest{}
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OvsPortUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OvsPortUpdateRequest) ProtoMessage() {}

func (x *OvsPortUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OvsPortUpdateRequest.ProtoReflect.Descriptor instead.
func (*OvsPortUpdateRequest) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_agent_v1_networkservice_proto_rawDescGZIP(), []int{18}
}

func (x *OvsPortUpdateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OvsPortUpdateRequest) GetVlanTags() []string {
	if x != nil {
		return x.VlanTags
	}
	return nil
}

type OvsPortUpdateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         *ErrorResponse         `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
	Port          *OvsPort               `protobuf:"bytes,3,opt,name=port,proto3,oneof" json:"port,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OvsPortUpdateResponse) Reset() {
	*x = OvsPortUpdateResponse{}
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OvsPortUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OvsPortUpdateResponse) ProtoMessage() {}

func (x *OvsPortUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OvsPortUpdateResponse.ProtoReflect.Descriptor instead.
func (*OvsPortUpdateResponse) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_agent_v1_networkservice_proto_rawDescGZIP(), []int{19}
}

func (x *OvsPortUpdateResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *OvsPortUpdateResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *OvsPortUpdateResponse) GetPort() *OvsPort {
	if x != nil {
		return x.Port
	}
	return nil
}

// OVS QoS Rule Messages
type OvsQosRule struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // Unique ID for the rule
	PortName      string                 `protobuf:"bytes,2,opt,name=port_name,json=portName,proto3" json:"port_name,omitempty"`
	Direction     string                 `protobuf:"bytes,3,opt,name=direction,proto3" json:"direction,omitempty"`             // "ingress" or "egress"
	MaxRate       uint64                 `protobuf:"varint,4,opt,name=max_rate,json=maxRate,proto3" json:"max_rate,omitempty"` // bits per second
	MinRate       uint64                 `protobuf:"varint,5,opt,name=min_rate,json=minRate,proto3" json:"min_rate,omitempty"`
	Priority      int32                  `protobuf:"varint,6,opt,name=priority,proto3" json:"priority,omitempty"` // Add other QoS parameters
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OvsQosRule) Reset() {
	*x = OvsQosRule{}
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OvsQosRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OvsQosRule) ProtoMessage() {}

func (x *OvsQosRule) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OvsQosRule.ProtoReflect.Descriptor instead.
func (*OvsQosRule) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_agent_v1_networkservice_proto_rawDescGZIP(), []int{20}
}

func (x *OvsQosRule) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OvsQosRule) GetPortName() string {
	if x != nil {
		return x.PortName
	}
	return ""
}

func (x *OvsQosRule) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

func (x *OvsQosRule) GetMaxRate() uint64 {
	if x != nil {
		return x.MaxRate
	}
	return 0
}

func (x *OvsQosRule) GetMinRate() uint64 {
	if x != nil {
		return x.MinRate
	}
	return 0
}

func (x *OvsQosRule) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

type OvsQosRuleCreateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PortName      string                 `protobuf:"bytes,1,opt,name=port_name,json=portName,proto3" json:"port_name,omitempty"`
	Direction     string                 `protobuf:"bytes,2,opt,name=direction,proto3" json:"direction,omitempty"`
	MaxRate       uint64                 `protobuf:"varint,3,opt,name=max_rate,json=maxRate,proto3" json:"max_rate,omitempty"`
	MinRate       uint64                 `protobuf:"varint,4,opt,name=min_rate,json=minRate,proto3" json:"min_rate,omitempty"`
	Priority      int32                  `protobuf:"varint,5,opt,name=priority,proto3" json:"priority,omitempty"` // Add other QoS parameters
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OvsQosRuleCreateRequest) Reset() {
	*x = OvsQosRuleCreateRequest{}
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OvsQosRuleCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OvsQosRuleCreateRequest) ProtoMessage() {}

func (x *OvsQosRuleCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OvsQosRuleCreateRequest.ProtoReflect.Descriptor instead.
func (*OvsQosRuleCreateRequest) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_agent_v1_networkservice_proto_rawDescGZIP(), []int{21}
}

func (x *OvsQosRuleCreateRequest) GetPortName() string {
	if x != nil {
		return x.PortName
	}
	return ""
}

func (x *OvsQosRuleCreateRequest) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

func (x *OvsQosRuleCreateRequest) GetMaxRate() uint64 {
	if x != nil {
		return x.MaxRate
	}
	return 0
}

func (x *OvsQosRuleCreateRequest) GetMinRate() uint64 {
	if x != nil {
		return x.MinRate
	}
	return 0
}

func (x *OvsQosRuleCreateRequest) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

type OvsQosRuleCreateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         *ErrorResponse         `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
	Rule          *OvsQosRule            `protobuf:"bytes,3,opt,name=rule,proto3,oneof" json:"rule,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OvsQosRuleCreateResponse) Reset() {
	*x = OvsQosRuleCreateResponse{}
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OvsQosRuleCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OvsQosRuleCreateResponse) ProtoMessage() {}

func (x *OvsQosRuleCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OvsQosRuleCreateResponse.ProtoReflect.Descriptor instead.
func (*OvsQosRuleCreateResponse) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_agent_v1_networkservice_proto_rawDescGZIP(), []int{22}
}

func (x *OvsQosRuleCreateResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *OvsQosRuleCreateResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *OvsQosRuleCreateResponse) GetRule() *OvsQosRule {
	if x != nil {
		return x.Rule
	}
	return nil
}

type OvsQosRuleDeleteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OvsQosRuleDeleteRequest) Reset() {
	*x = OvsQosRuleDeleteRequest{}
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OvsQosRuleDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OvsQosRuleDeleteRequest) ProtoMessage() {}

func (x *OvsQosRuleDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OvsQosRuleDeleteRequest.ProtoReflect.Descriptor instead.
func (*OvsQosRuleDeleteRequest) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_agent_v1_networkservice_proto_rawDescGZIP(), []int{23}
}

func (x *OvsQosRuleDeleteRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type OvsQosRuleDeleteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         *ErrorResponse         `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OvsQosRuleDeleteResponse) Reset() {
	*x = OvsQosRuleDeleteResponse{}
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OvsQosRuleDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OvsQosRuleDeleteResponse) ProtoMessage() {}

func (x *OvsQosRuleDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OvsQosRuleDeleteResponse.ProtoReflect.Descriptor instead.
func (*OvsQosRuleDeleteResponse) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_agent_v1_networkservice_proto_rawDescGZIP(), []int{24}
}

func (x *OvsQosRuleDeleteResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *OvsQosRuleDeleteResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type OvsQosRuleListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PortName      *string                `protobuf:"bytes,1,opt,name=port_name,json=portName,proto3,oneof" json:"port_name,omitempty"` // List rules for a specific port
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OvsQosRuleListRequest) Reset() {
	*x = OvsQosRuleListRequest{}
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OvsQosRuleListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OvsQosRuleListRequest) ProtoMessage() {}

func (x *OvsQosRuleListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OvsQosRuleListRequest.ProtoReflect.Descriptor instead.
func (*OvsQosRuleListRequest) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_agent_v1_networkservice_proto_rawDescGZIP(), []int{25}
}

func (x *OvsQosRuleListRequest) GetPortName() string {
	if x != nil && x.PortName != nil {
		return *x.PortName
	}
	return ""
}

type OvsQosRuleListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rules         []*OvsQosRule          `protobuf:"bytes,1,rep,name=rules,proto3" json:"rules,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OvsQosRuleListResponse) Reset() {
	*x = OvsQosRuleListResponse{}
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OvsQosRuleListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OvsQosRuleListResponse) ProtoMessage() {}

func (x *OvsQosRuleListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OvsQosRuleListResponse.ProtoReflect.Descriptor instead.
func (*OvsQosRuleListResponse) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_agent_v1_networkservice_proto_rawDescGZIP(), []int{26}
}

func (x *OvsQosRuleListResponse) GetRules() []*OvsQosRule {
	if x != nil {
		return x.Rules
	}
	return nil
}

type OvsQosRuleGetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OvsQosRuleGetRequest) Reset() {
	*x = OvsQosRuleGetRequest{}
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OvsQosRuleGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OvsQosRuleGetRequest) ProtoMessage() {}

func (x *OvsQosRuleGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OvsQosRuleGetRequest.ProtoReflect.Descriptor instead.
func (*OvsQosRuleGetRequest) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_agent_v1_networkservice_proto_rawDescGZIP(), []int{27}
}

func (x *OvsQosRuleGetRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type OvsQosRuleGetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rule          *OvsQosRule            `protobuf:"bytes,1,opt,name=rule,proto3,oneof" json:"rule,omitempty"`
	Error         *ErrorResponse         `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OvsQosRuleGetResponse) Reset() {
	*x = OvsQosRuleGetResponse{}
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OvsQosRuleGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OvsQosRuleGetResponse) ProtoMessage() {}

func (x *OvsQosRuleGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OvsQosRuleGetResponse.ProtoReflect.Descriptor instead.
func (*OvsQosRuleGetResponse) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_agent_v1_networkservice_proto_rawDescGZIP(), []int{28}
}

func (x *OvsQosRuleGetResponse) GetRule() *OvsQosRule {
	if x != nil {
		return x.Rule
	}
	return nil
}

func (x *OvsQosRuleGetResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

// Libvirt Network Messages
type Network struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` // Add other network details like IP ranges, forwarding modes, etc.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Network) Reset() {
	*x = Network{}
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Network) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Network) ProtoMessage() {}

func (x *Network) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Network.ProtoReflect.Descriptor instead.
func (*Network) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_agent_v1_networkservice_proto_rawDescGZIP(), []int{29}
}

func (x *Network) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type NetworkCreateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ForwardMode   string                 `protobuf:"bytes,2,opt,name=forward_mode,json=forwardMode,proto3" json:"forward_mode,omitempty"`    // e.g., "nat", "bridge", "isolated"
	BridgeName    *string                `protobuf:"bytes,3,opt,name=bridge_name,json=bridgeName,proto3,oneof" json:"bridge_name,omitempty"` // For bridged networks
	IpRangeStart  *string                `protobuf:"bytes,4,opt,name=ip_range_start,json=ipRangeStart,proto3,oneof" json:"ip_range_start,omitempty"`
	IpRangeEnd    *string                `protobuf:"bytes,5,opt,name=ip_range_end,json=ipRangeEnd,proto3,oneof" json:"ip_range_end,omitempty"` // Add other network configuration options
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkCreateRequest) Reset() {
	*x = NetworkCreateRequest{}
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkCreateRequest) ProtoMessage() {}

func (x *NetworkCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkCreateRequest.ProtoReflect.Descriptor instead.
func (*NetworkCreateRequest) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_agent_v1_networkservice_proto_rawDescGZIP(), []int{30}
}

func (x *NetworkCreateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NetworkCreateRequest) GetForwardMode() string {
	if x != nil {
		return x.ForwardMode
	}
	return ""
}

func (x *NetworkCreateRequest) GetBridgeName() string {
	if x != nil && x.BridgeName != nil {
		return *x.BridgeName
	}
	return ""
}

func (x *NetworkCreateRequest) GetIpRangeStart() string {
	if x != nil && x.IpRangeStart != nil {
		return *x.IpRangeStart
	}
	return ""
}

func (x *NetworkCreateRequest) GetIpRangeEnd() string {
	if x != nil && x.IpRangeEnd != nil {
		return *x.IpRangeEnd
	}
	return ""
}

type NetworkCreateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         *ErrorResponse         `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
	Network       *Network               `protobuf:"bytes,3,opt,name=network,proto3,oneof" json:"network,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkCreateResponse) Reset() {
	*x = NetworkCreateResponse{}
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkCreateResponse) ProtoMessage() {}

func (x *NetworkCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkCreateResponse.ProtoReflect.Descriptor instead.
func (*NetworkCreateResponse) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_agent_v1_networkservice_proto_rawDescGZIP(), []int{31}
}

func (x *NetworkCreateResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *NetworkCreateResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *NetworkCreateResponse) GetNetwork() *Network {
	if x != nil {
		return x.Network
	}
	return nil
}

type NetworkDeleteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkDeleteRequest) Reset() {
	*x = NetworkDeleteRequest{}
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkDeleteRequest) ProtoMessage() {}

func (x *NetworkDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkDeleteRequest.ProtoReflect.Descriptor instead.
func (*NetworkDeleteRequest) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_agent_v1_networkservice_proto_rawDescGZIP(), []int{32}
}

func (x *NetworkDeleteRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type NetworkDeleteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         *ErrorResponse         `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkDeleteResponse) Reset() {
	*x = NetworkDeleteResponse{}
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkDeleteResponse) ProtoMessage() {}

func (x *NetworkDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkDeleteResponse.ProtoReflect.Descriptor instead.
func (*NetworkDeleteResponse) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_agent_v1_networkservice_proto_rawDescGZIP(), []int{33}
}

func (x *NetworkDeleteResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *NetworkDeleteResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

type NetworkListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkListRequest) Reset() {
	*x = NetworkListRequest{}
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkListRequest) ProtoMessage() {}

func (x *NetworkListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkListRequest.ProtoReflect.Descriptor instead.
func (*NetworkListRequest) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_agent_v1_networkservice_proto_rawDescGZIP(), []int{34}
}

type NetworkListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Networks      []*Network             `protobuf:"bytes,1,rep,name=networks,proto3" json:"networks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkListResponse) Reset() {
	*x = NetworkListResponse{}
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkListResponse) ProtoMessage() {}

func (x *NetworkListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkListResponse.ProtoReflect.Descriptor instead.
func (*NetworkListResponse) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_agent_v1_networkservice_proto_rawDescGZIP(), []int{35}
}

func (x *NetworkListResponse) GetNetworks() []*Network {
	if x != nil {
		return x.Networks
	}
	return nil
}

type NetworkGetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkGetRequest) Reset() {
	*x = NetworkGetRequest{}
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkGetRequest) ProtoMessage() {}

func (x *NetworkGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkGetRequest.ProtoReflect.Descriptor instead.
func (*NetworkGetRequest) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_agent_v1_networkservice_proto_rawDescGZIP(), []int{36}
}

func (x *NetworkGetRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type NetworkGetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Network       *Network               `protobuf:"bytes,1,opt,name=network,proto3,oneof" json:"network,omitempty"`
	Error         *ErrorResponse         `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkGetResponse) Reset() {
	*x = NetworkGetResponse{}
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkGetResponse) ProtoMessage() {}

func (x *NetworkGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkGetResponse.ProtoReflect.Descriptor instead.
func (*NetworkGetResponse) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_agent_v1_networkservice_proto_rawDescGZIP(), []int{37}
}

func (x *NetworkGetResponse) GetNetwork() *Network {
	if x != nil {
		return x.Network
	}
	return nil
}

func (x *NetworkGetResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

var File_pilab_cloud_agent_v1_networkservice_proto protoreflect.FileDescriptor

var file_pilab_cloud_agent_v1_networkservice_proto_rawDesc = string([]byte{
	0x0a, 0x29, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x70, 0x69, 0x6c,
	0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x1a, 0x27, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1f, 0x0a, 0x09, 0x4f, 0x76,
	0x73, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x2c, 0x0a, 0x16, 0x4f,
	0x76, 0x73, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xc6, 0x01, 0x0a, 0x17, 0x4f, 0x76,
	0x73, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x3e, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12,
	0x3c, 0x0a, 0x06, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x76, 0x73, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65,
	0x48, 0x01, 0x52, 0x06, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a,
	0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x62, 0x72, 0x69, 0x64,
	0x67, 0x65, 0x22, 0x2c, 0x0a, 0x16, 0x4f, 0x76, 0x73, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x7d, 0x0a, 0x17, 0x4f, 0x76, 0x73, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x3e, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22,
	0x16, 0x0a, 0x14, 0x4f, 0x76, 0x73, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x52, 0x0a, 0x15, 0x4f, 0x76, 0x73, 0x42, 0x72,
	0x69, 0x64, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x39, 0x0a, 0x07, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x76, 0x73, 0x42, 0x72, 0x69, 0x64,
	0x67, 0x65, 0x52, 0x07, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x73, 0x22, 0x29, 0x0a, 0x13, 0x4f,
	0x76, 0x73, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xa9, 0x01, 0x0a, 0x14, 0x4f, 0x76, 0x73, 0x42, 0x72,
	0x69, 0x64, 0x67, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3c, 0x0a, 0x06, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x76, 0x73, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65,
	0x48, 0x00, 0x52, 0x06, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x3e, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70,
	0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x48, 0x01, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x22, 0x9a, 0x01, 0x0a, 0x07, 0x4f, 0x76, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0d, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x1b, 0x0a, 0x09, 0x76, 0x6c, 0x61, 0x6e, 0x5f, 0x74, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x08, 0x76, 0x6c, 0x61, 0x6e, 0x54, 0x61, 0x67, 0x73, 0x42, 0x11, 0x0a, 0x0f,
	0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0xa7, 0x01, 0x0a, 0x14, 0x4f, 0x76, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x72, 0x69, 0x64,
	0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62,
	0x72, 0x69, 0x64, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a,
	0x0e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x6c, 0x61,
	0x6e, 0x5f, 0x74, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x76, 0x6c,
	0x61, 0x6e, 0x54, 0x61, 0x67, 0x73, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xbc, 0x01, 0x0a, 0x15, 0x4f, 0x76,
	0x73, 0x50, 0x6f, 0x72, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x3e, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70,
	0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x36, 0x0a,
	0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x69,
	0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x4f, 0x76, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x48, 0x01, 0x52, 0x04, 0x70, 0x6f,
	0x72, 0x74, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42,
	0x07, 0x0a, 0x05, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x2a, 0x0a, 0x14, 0x4f, 0x76, 0x73, 0x50,
	0x6f, 0x72, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x7b, 0x0a, 0x15, 0x4f, 0x76, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x3e, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0x4a, 0x0a, 0x12, 0x4f, 0x76, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0b, 0x62, 0x72, 0x69, 0x64, 0x67,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a,
	0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a,
	0x0c, 0x5f, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4a, 0x0a,
	0x13, 0x4f, 0x76, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x76, 0x73, 0x50, 0x6f,
	0x72, 0x74, 0x52, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x22, 0x27, 0x0a, 0x11, 0x4f, 0x76, 0x73,
	0x50, 0x6f, 0x72, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x9f, 0x01, 0x0a, 0x12, 0x4f, 0x76, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x04, 0x70, 0x6f, 0x72,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4f,
	0x76, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x48, 0x00, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x3e, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x01, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01,
	0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x22, 0x47, 0x0a, 0x14, 0x4f, 0x76, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x76, 0x6c, 0x61, 0x6e, 0x5f, 0x74, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x08, 0x76, 0x6c, 0x61, 0x6e, 0x54, 0x61, 0x67, 0x73, 0x22, 0xbc, 0x01,
	0x0a, 0x15, 0x4f, 0x76, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x3e, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01,
	0x01, 0x12, 0x36, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x76, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x48, 0x01,
	0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x22, 0xa9, 0x01, 0x0a,
	0x0a, 0x4f, 0x76, 0x73, 0x51, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x5f, 0x72, 0x61,
	0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x52, 0x61, 0x74,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x6d, 0x69, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x22, 0xa6, 0x01, 0x0a, 0x17, 0x4f, 0x76, 0x73,
	0x51, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x19, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x52, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x69,
	0x6e, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6d, 0x69,
	0x6e, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x22, 0xc2, 0x01, 0x0a, 0x18, 0x4f, 0x76, 0x73, 0x51, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x3e, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x04, 0x72, 0x75, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x76,
	0x73, 0x51, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x48, 0x01, 0x52, 0x04, 0x72, 0x75, 0x6c, 0x65,
	0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x07, 0x0a,
	0x05, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x22, 0x29, 0x0a, 0x17, 0x4f, 0x76, 0x73, 0x51, 0x6f, 0x73,
	0x52, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x7e, 0x0a, 0x18, 0x4f, 0x76, 0x73, 0x51, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x3e, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0x47, 0x0a, 0x15, 0x4f, 0x76, 0x73, 0x51, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x09, 0x70, 0x6f,
	0x72, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x08, 0x70, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a,
	0x5f, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x50, 0x0a, 0x16, 0x4f, 0x76,
	0x73, 0x51, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x76, 0x73, 0x51, 0x6f,
	0x73, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x22, 0x26, 0x0a, 0x14,
	0x4f, 0x76, 0x73, 0x51, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0xa5, 0x01, 0x0a, 0x15, 0x4f, 0x76, 0x73, 0x51, 0x6f, 0x73, 0x52,
	0x75, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39,
	0x0a, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70,
	0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x76, 0x73, 0x51, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x48, 0x00,
	0x52, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x3e, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x01, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x72, 0x75,
	0x6c, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x1d, 0x0a, 0x07,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xf9, 0x01, 0x0a, 0x14,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x6f, 0x72, 0x77,
	0x61, 0x72, 0x64, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0b, 0x62,
	0x72, 0x69, 0x64, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x0a, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x29, 0x0a, 0x0e, 0x69, 0x70, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0c, 0x69, 0x70, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0c,
	0x69, 0x70, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x02, 0x52, 0x0a, 0x69, 0x70, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x6e, 0x64,
	0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x69, 0x70, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65,
	0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x69, 0x70, 0x5f, 0x72, 0x61,
	0x6e, 0x67, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x22, 0xc5, 0x01, 0x0a, 0x15, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x3e, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x69, 0x6c,
	0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48,
	0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x3c, 0x0a, 0x07, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70,
	0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x48, 0x01, 0x52, 0x07, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x22,
	0x2a, 0x0a, 0x14, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x7b, 0x0a, 0x15, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x3e,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x14, 0x0a, 0x12, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x50,
	0x0a, 0x13, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x22, 0x27, 0x0a, 0x11, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xa8, 0x01, 0x0a, 0x12, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3c, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x48, 0x00, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x3e,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x48, 0x01, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x0a,
	0x0a, 0x08, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x32, 0x9a, 0x0e, 0x0a, 0x0e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6e, 0x0a, 0x0f, 0x4f, 0x76, 0x73, 0x42, 0x72,
	0x69, 0x64, 0x67, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x2e, 0x70, 0x69, 0x6c,
	0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x4f, 0x76, 0x73, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x4f, 0x76, 0x73, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6e, 0x0a, 0x0f, 0x4f, 0x76, 0x73, 0x42, 0x72,
	0x69, 0x64, 0x67, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x2c, 0x2e, 0x70, 0x69, 0x6c,
	0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x4f, 0x76, 0x73, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x4f, 0x76, 0x73, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x0d, 0x4f, 0x76, 0x73, 0x42, 0x72,
	0x69, 0x64, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x4f, 0x76, 0x73, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x76, 0x73, 0x42,
	0x72, 0x69, 0x64, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x65, 0x0a, 0x0c, 0x4f, 0x76, 0x73, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x47, 0x65,
	0x74, 0x12, 0x29, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x76, 0x73, 0x42, 0x72, 0x69, 0x64,
	0x67, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x70,
	0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x76, 0x73, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x0d, 0x4f, 0x76, 0x73, 0x50,
	0x6f, 0x72, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x2e, 0x70, 0x69, 0x6c, 0x61,
	0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x4f, 0x76, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x76, 0x73,
	0x50, 0x6f, 0x72, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x68, 0x0a, 0x0d, 0x4f, 0x76, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x12, 0x2a, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x76, 0x73, 0x50, 0x6f,
	0x72, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2b, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x76, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x0b,
	0x4f, 0x76, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x2e, 0x70, 0x69,
	0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x4f, 0x76, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x76, 0x73,
	0x50, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x5f, 0x0a, 0x0a, 0x4f, 0x76, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x47, 0x65, 0x74, 0x12, 0x27,
	0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x76, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4f,
	0x76, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x68, 0x0a, 0x0d, 0x4f, 0x76, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x2a, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x76, 0x73, 0x50, 0x6f, 0x72,
	0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b,
	0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x76, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x71, 0x0a, 0x10, 0x4f,
	0x76, 0x73, 0x51, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12,
	0x2d, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x76, 0x73, 0x51, 0x6f, 0x73, 0x52, 0x75, 0x6c,
	0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e,
	0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x76, 0x73, 0x51, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x71,
	0x0a, 0x10, 0x4f, 0x76, 0x73, 0x51, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x12, 0x2d, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x76, 0x73, 0x51, 0x6f, 0x73,
	0x52, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2e, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x76, 0x73, 0x51, 0x6f, 0x73, 0x52,
	0x75, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x6b, 0x0a, 0x0e, 0x4f, 0x76, 0x73, 0x51, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x2b, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x76, 0x73, 0x51, 0x6f,
	0x73, 0x52, 0x75, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2c, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x76, 0x73, 0x51, 0x6f, 0x73, 0x52, 0x75,
	0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68,
	0x0a, 0x0d, 0x4f, 0x76, 0x73, 0x51, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x12,
	0x2a, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x76, 0x73, 0x51, 0x6f, 0x73, 0x52, 0x75, 0x6c,
	0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x70, 0x69,
	0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x4f, 0x76, 0x73, 0x51, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x0d, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x2e, 0x70, 0x69, 0x6c, 0x61,
	0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x68, 0x0a, 0x0d, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x12, 0x2a, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2b, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x0b,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x2e, 0x70, 0x69,
	0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x5f, 0x0a, 0x0a, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x47, 0x65, 0x74, 0x12, 0x27,
	0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x3b, 0x5a, 0x39, 0x67, 0x6f, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x68, 0x75,
	0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x76, 0x69, 0x72, 0x74, 0x70, 0x62, 0x2f, 0x67, 0x65,
	0x6e, 0x2f, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x3b, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x76, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_pilab_cloud_agent_v1_networkservice_proto_rawDescOnce sync.Once
	file_pilab_cloud_agent_v1_networkservice_proto_rawDescData []byte
)

func file_pilab_cloud_agent_v1_networkservice_proto_rawDescGZIP() []byte {
	file_pilab_cloud_agent_v1_networkservice_proto_rawDescOnce.Do(func() {
		file_pilab_cloud_agent_v1_networkservice_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pilab_cloud_agent_v1_networkservice_proto_rawDesc), len(file_pilab_cloud_agent_v1_networkservice_proto_rawDesc)))
	})
	return file_pilab_cloud_agent_v1_networkservice_proto_rawDescData
}

var file_pilab_cloud_agent_v1_networkservice_proto_msgTypes = make([]protoimpl.MessageInfo, 38)
var file_pilab_cloud_agent_v1_networkservice_proto_goTypes = []any{
	(*OvsBridge)(nil),                // 0: pilab.cloud.agent.v1.OvsBridge
	(*OvsBridgeCreateRequest)(nil),   // 1: pilab.cloud.agent.v1.OvsBridgeCreateRequest
	(*OvsBridgeCreateResponse)(nil),  // 2: pilab.cloud.agent.v1.OvsBridgeCreateResponse
	(*OvsBridgeDeleteRequest)(nil),   // 3: pilab.cloud.agent.v1.OvsBridgeDeleteRequest
	(*OvsBridgeDeleteResponse)(nil),  // 4: pilab.cloud.agent.v1.OvsBridgeDeleteResponse
	(*OvsBridgeListRequest)(nil),     // 5: pilab.cloud.agent.v1.OvsBridgeListRequest
	(*OvsBridgeListResponse)(nil),    // 6: pilab.cloud.agent.v1.OvsBridgeListResponse
	(*OvsBridgeGetRequest)(nil),      // 7: pilab.cloud.agent.v1.OvsBridgeGetRequest
	(*OvsBridgeGetResponse)(nil),     // 8: pilab.cloud.agent.v1.OvsBridgeGetResponse
	(*OvsPort)(nil),                  // 9: pilab.cloud.agent.v1.OvsPort
	(*OvsPortCreateRequest)(nil),     // 10: pilab.cloud.agent.v1.OvsPortCreateRequest
	(*OvsPortCreateResponse)(nil),    // 11: pilab.cloud.agent.v1.OvsPortCreateResponse
	(*OvsPortDeleteRequest)(nil),     // 12: pilab.cloud.agent.v1.OvsPortDeleteRequest
	(*OvsPortDeleteResponse)(nil),    // 13: pilab.cloud.agent.v1.OvsPortDeleteResponse
	(*OvsPortListRequest)(nil),       // 14: pilab.cloud.agent.v1.OvsPortListRequest
	(*OvsPortListResponse)(nil),      // 15: pilab.cloud.agent.v1.OvsPortListResponse
	(*OvsPortGetRequest)(nil),        // 16: pilab.cloud.agent.v1.OvsPortGetRequest
	(*OvsPortGetResponse)(nil),       // 17: pilab.cloud.agent.v1.OvsPortGetResponse
	(*OvsPortUpdateRequest)(nil),     // 18: pilab.cloud.agent.v1.OvsPortUpdateRequest
	(*OvsPortUpdateResponse)(nil),    // 19: pilab.cloud.agent.v1.OvsPortUpdateResponse
	(*OvsQosRule)(nil),               // 20: pilab.cloud.agent.v1.OvsQosRule
	(*OvsQosRuleCreateRequest)(nil),  // 21: pilab.cloud.agent.v1.OvsQosRuleCreateRequest
	(*OvsQosRuleCreateResponse)(nil), // 22: pilab.cloud.agent.v1.OvsQosRuleCreateResponse
	(*OvsQosRuleDeleteRequest)(nil),  // 23: pilab.cloud.agent.v1.OvsQosRuleDeleteRequest
	(*OvsQosRuleDeleteResponse)(nil), // 24: pilab.cloud.agent.v1.OvsQosRuleDeleteResponse
	(*OvsQosRuleListRequest)(nil),    // 25: pilab.cloud.agent.v1.OvsQosRuleListRequest
	(*OvsQosRuleListResponse)(nil),   // 26: pilab.cloud.agent.v1.OvsQosRuleListResponse
	(*OvsQosRuleGetRequest)(nil),     // 27: pilab.cloud.agent.v1.OvsQosRuleGetRequest
	(*OvsQosRuleGetResponse)(nil),    // 28: pilab.cloud.agent.v1.OvsQosRuleGetResponse
	(*Network)(nil),                  // 29: pilab.cloud.agent.v1.Network
	(*NetworkCreateRequest)(nil),     // 30: pilab.cloud.agent.v1.NetworkCreateRequest
	(*NetworkCreateResponse)(nil),    // 31: pilab.cloud.agent.v1.NetworkCreateResponse
	(*NetworkDeleteRequest)(nil),     // 32: pilab.cloud.agent.v1.NetworkDeleteRequest
	(*NetworkDeleteResponse)(nil),    // 33: pilab.cloud.agent.v1.NetworkDeleteResponse
	(*NetworkListRequest)(nil),       // 34: pilab.cloud.agent.v1.NetworkListRequest
	(*NetworkListResponse)(nil),      // 35: pilab.cloud.agent.v1.NetworkListResponse
	(*NetworkGetRequest)(nil),        // 36: pilab.cloud.agent.v1.NetworkGetRequest
	(*NetworkGetResponse)(nil),       // 37: pilab.cloud.agent.v1.NetworkGetResponse
	(*ErrorResponse)(nil),            // 38: pilab.cloud.agent.v1.ErrorResponse
}
var file_pilab_cloud_agent_v1_networkservice_proto_depIdxs = []int32{
	38, // 0: pilab.cloud.agent.v1.OvsBridgeCreateResponse.error:type_name -> pilab.cloud.agent.v1.ErrorResponse
	0,  // 1: pilab.cloud.agent.v1.OvsBridgeCreateResponse.bridge:type_name -> pilab.cloud.agent.v1.OvsBridge
	38, // 2: pilab.cloud.agent.v1.OvsBridgeDeleteResponse.error:type_name -> pilab.cloud.agent.v1.ErrorResponse
	0,  // 3: pilab.cloud.agent.v1.OvsBridgeListResponse.bridges:type_name -> pilab.cloud.agent.v1.OvsBridge
	0,  // 4: pilab.cloud.agent.v1.OvsBridgeGetResponse.bridge:type_name -> pilab.cloud.agent.v1.OvsBridge
	38, // 5: pilab.cloud.agent.v1.OvsBridgeGetResponse.error:type_name -> pilab.cloud.agent.v1.ErrorResponse
	38, // 6: pilab.cloud.agent.v1.OvsPortCreateResponse.error:type_name -> pilab.cloud.agent.v1.ErrorResponse
	9,  // 7: pilab.cloud.agent.v1.OvsPortCreateResponse.port:type_name -> pilab.cloud.agent.v1.OvsPort
	38, // 8: pilab.cloud.agent.v1.OvsPortDeleteResponse.error:type_name -> pilab.cloud.agent.v1.ErrorResponse
	9,  // 9: pilab.cloud.agent.v1.OvsPortListResponse.ports:type_name -> pilab.cloud.agent.v1.OvsPort
	9,  // 10: pilab.cloud.agent.v1.OvsPortGetResponse.port:type_name -> pilab.cloud.agent.v1.OvsPort
	38, // 11: pilab.cloud.agent.v1.OvsPortGetResponse.error:type_name -> pilab.cloud.agent.v1.ErrorResponse
	38, // 12: pilab.cloud.agent.v1.OvsPortUpdateResponse.error:type_name -> pilab.cloud.agent.v1.ErrorResponse
	9,  // 13: pilab.cloud.agent.v1.OvsPortUpdateResponse.port:type_name -> pilab.cloud.agent.v1.OvsPort
	38, // 14: pilab.cloud.agent.v1.OvsQosRuleCreateResponse.error:type_name -> pilab.cloud.agent.v1.ErrorResponse
	20, // 15: pilab.cloud.agent.v1.OvsQosRuleCreateResponse.rule:type_name -> pilab.cloud.agent.v1.OvsQosRule
	38, // 16: pilab.cloud.agent.v1.OvsQosRuleDeleteResponse.error:type_name -> pilab.cloud.agent.v1.ErrorResponse
	20, // 17: pilab.cloud.agent.v1.OvsQosRuleListResponse.rules:type_name -> pilab.cloud.agent.v1.OvsQosRule
	20, // 18: pilab.cloud.agent.v1.OvsQosRuleGetResponse.rule:type_name -> pilab.cloud.agent.v1.OvsQosRule
	38, // 19: pilab.cloud.agent.v1.OvsQosRuleGetResponse.error:type_name -> pilab.cloud.agent.v1.ErrorResponse
	38, // 20: pilab.cloud.agent.v1.NetworkCreateResponse.error:type_name -> pilab.cloud.agent.v1.ErrorResponse
	29, // 21: pilab.cloud.agent.v1.NetworkCreateResponse.network:type_name -> pilab.cloud.agent.v1.Network
	38, // 22: pilab.cloud.agent.v1.NetworkDeleteResponse.error:type_name -> pilab.cloud.agent.v1.ErrorResponse
	29, // 23: pilab.cloud.agent.v1.NetworkListResponse.networks:type_name -> pilab.cloud.agent.v1.Network
	29, // 24: pilab.cloud.agent.v1.NetworkGetResponse.network:type_name -> pilab.cloud.agent.v1.Network
	38, // 25: pilab.cloud.agent.v1.NetworkGetResponse.error:type_name -> pilab.cloud.agent.v1.ErrorResponse
	1,  // 26: pilab.cloud.agent.v1.NetworkService.OvsBridgeCreate:input_type -> pilab.cloud.agent.v1.OvsBridgeCreateRequest
	3,  // 27: pilab.cloud.agent.v1.NetworkService.OvsBridgeDelete:input_type -> pilab.cloud.agent.v1.OvsBridgeDeleteRequest
	5,  // 28: pilab.cloud.agent.v1.NetworkService.OvsBridgeList:input_type -> pilab.cloud.agent.v1.OvsBridgeListRequest
	7,  // 29: pilab.cloud.agent.v1.NetworkService.OvsBridgeGet:input_type -> pilab.cloud.agent.v1.OvsBridgeGetRequest
	10, // 30: pilab.cloud.agent.v1.NetworkService.OvsPortCreate:input_type -> pilab.cloud.agent.v1.OvsPortCreateRequest
	12, // 31: pilab.cloud.agent.v1.NetworkService.OvsPortDelete:input_type -> pilab.cloud.agent.v1.OvsPortDeleteRequest
	14, // 32: pilab.cloud.agent.v1.NetworkService.OvsPortList:input_type -> pilab.cloud.agent.v1.OvsPortListRequest
	16, // 33: pilab.cloud.agent.v1.NetworkService.OvsPortGet:input_type -> pilab.cloud.agent.v1.OvsPortGetRequest
	18, // 34: pilab.cloud.agent.v1.NetworkService.OvsPortUpdate:input_type -> pilab.cloud.agent.v1.OvsPortUpdateRequest
	21, // 35: pilab.cloud.agent.v1.NetworkService.OvsQosRuleCreate:input_type -> pilab.cloud.agent.v1.OvsQosRuleCreateRequest
	23, // 36: pilab.cloud.agent.v1.NetworkService.OvsQosRuleDelete:input_type -> pilab.cloud.agent.v1.OvsQosRuleDeleteRequest
	25, // 37: pilab.cloud.agent.v1.NetworkService.OvsQosRuleList:input_type -> pilab.cloud.agent.v1.OvsQosRuleListRequest
	27, // 38: pilab.cloud.agent.v1.NetworkService.OvsQosRuleGet:input_type -> pilab.cloud.agent.v1.OvsQosRuleGetRequest
	30, // 39: pilab.cloud.agent.v1.NetworkService.NetworkCreate:input_type -> pilab.cloud.agent.v1.NetworkCreateRequest
	32, // 40: pilab.cloud.agent.v1.NetworkService.NetworkDelete:input_type -> pilab.cloud.agent.v1.NetworkDeleteRequest
	34, // 41: pilab.cloud.agent.v1.NetworkService.NetworkList:input_type -> pilab.cloud.agent.v1.NetworkListRequest
	36, // 42: pilab.cloud.agent.v1.NetworkService.NetworkGet:input_type -> pilab.cloud.agent.v1.NetworkGetRequest
	2,  // 43: pilab.cloud.agent.v1.NetworkService.OvsBridgeCreate:output_type -> pilab.cloud.agent.v1.OvsBridgeCreateResponse
	4,  // 44: pilab.cloud.agent.v1.NetworkService.OvsBridgeDelete:output_type -> pilab.cloud.agent.v1.OvsBridgeDeleteResponse
	6,  // 45: pilab.cloud.agent.v1.NetworkService.OvsBridgeList:output_type -> pilab.cloud.agent.v1.OvsBridgeListResponse
	8,  // 46: pilab.cloud.agent.v1.NetworkService.OvsBridgeGet:output_type -> pilab.cloud.agent.v1.OvsBridgeGetResponse
	11, // 47: pilab.cloud.agent.v1.NetworkService.OvsPortCreate:output_type -> pilab.cloud.agent.v1.OvsPortCreateResponse
	13, // 48: pilab.cloud.agent.v1.NetworkService.OvsPortDelete:output_type -> pilab.cloud.agent.v1.OvsPortDeleteResponse
	15, // 49: pilab.cloud.agent.v1.NetworkService.OvsPortList:output_type -> pilab.cloud.agent.v1.OvsPortListResponse
	17, // 50: pilab.cloud.agent.v1.NetworkService.OvsPortGet:output_type -> pilab.cloud.agent.v1.OvsPortGetResponse
	19, // 51: pilab.cloud.agent.v1.NetworkService.OvsPortUpdate:output_type -> pilab.cloud.agent.v1.OvsPortUpdateResponse
	22, // 52: pilab.cloud.agent.v1.NetworkService.OvsQosRuleCreate:output_type -> pilab.cloud.agent.v1.OvsQosRuleCreateResponse
	24, // 53: pilab.cloud.agent.v1.NetworkService.OvsQosRuleDelete:output_type -> pilab.cloud.agent.v1.OvsQosRuleDeleteResponse
	26, // 54: pilab.cloud.agent.v1.NetworkService.OvsQosRuleList:output_type -> pilab.cloud.agent.v1.OvsQosRuleListResponse
	28, // 55: pilab.cloud.agent.v1.NetworkService.OvsQosRuleGet:output_type -> pilab.cloud.agent.v1.OvsQosRuleGetResponse
	31, // 56: pilab.cloud.agent.v1.NetworkService.NetworkCreate:output_type -> pilab.cloud.agent.v1.NetworkCreateResponse
	33, // 57: pilab.cloud.agent.v1.NetworkService.NetworkDelete:output_type -> pilab.cloud.agent.v1.NetworkDeleteResponse
	35, // 58: pilab.cloud.agent.v1.NetworkService.NetworkList:output_type -> pilab.cloud.agent.v1.NetworkListResponse
	37, // 59: pilab.cloud.agent.v1.NetworkService.NetworkGet:output_type -> pilab.cloud.agent.v1.NetworkGetResponse
	43, // [43:60] is the sub-list for method output_type
	26, // [26:43] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_pilab_cloud_agent_v1_networkservice_proto_init() }
func file_pilab_cloud_agent_v1_networkservice_proto_init() {
	if File_pilab_cloud_agent_v1_networkservice_proto != nil {
		return
	}
	file_pilab_cloud_agent_v1_agentservice_proto_init()
	file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[2].OneofWrappers = []any{}
	file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[4].OneofWrappers = []any{}
	file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[8].OneofWrappers = []any{}
	file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[9].OneofWrappers = []any{}
	file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[10].OneofWrappers = []any{}
	file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[11].OneofWrappers = []any{}
	file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[13].OneofWrappers = []any{}
	file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[14].OneofWrappers = []any{}
	file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[17].OneofWrappers = []any{}
	file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[19].OneofWrappers = []any{}
	file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[22].OneofWrappers = []any{}
	file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[24].OneofWrappers = []any{}
	file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[25].OneofWrappers = []any{}
	file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[28].OneofWrappers = []any{}
	file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[30].OneofWrappers = []any{}
	file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[31].OneofWrappers = []any{}
	file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[33].OneofWrappers = []any{}
	file_pilab_cloud_agent_v1_networkservice_proto_msgTypes[37].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pilab_cloud_agent_v1_networkservice_proto_rawDesc), len(file_pilab_cloud_agent_v1_networkservice_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   38,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pilab_cloud_agent_v1_networkservice_proto_goTypes,
		DependencyIndexes: file_pilab_cloud_agent_v1_networkservice_proto_depIdxs,
		MessageInfos:      file_pilab_cloud_agent_v1_networkservice_proto_msgTypes,
	}.Build()
	File_pilab_cloud_agent_v1_networkservice_proto = out.File
	file_pilab_cloud_agent_v1_networkservice_proto_goTypes = nil
	file_pilab_cloud_agent_v1_networkservice_proto_depIdxs = nil
}
