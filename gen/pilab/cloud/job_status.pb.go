// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        (unknown)
// source: pilab/cloud/job_status.proto

package cloudpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// JobStatus is a message that represents the status of a Job.
type JobStatus struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// JobID is the unique identifier of the Job.
	Job string `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	// ElapsedTime is the time in milliseconds that has elapsed since the Job started.
	ElapsedTime uint64 `protobuf:"varint,2,opt,name=elapsed_time,json=elapsedTime,proto3" json:"elapsed_time,omitempty"`
	// RemainingTime is the estimated time in milliseconds that the Job will take to complete.
	RemainingTime uint64 `protobuf:"varint,3,opt,name=remaining_time,json=remainingTime,proto3" json:"remaining_time,omitempty"`
	// Progress is a value between 0 and 1 that represents the progress of the Job.
	// Multiply by 100 to get a percentage.
	Progress float32 `protobuf:"fixed32,4,opt,name=progress,proto3" json:"progress,omitempty"`
	// Message is a human-readable message that describes the status of the Job.
	Message *string `protobuf:"bytes,5,opt,name=message,proto3,oneof" json:"message,omitempty"`
	// HostID is the unique identifier of the Host that is executing the Job.
	// This is optional because some Jobs may not be associated with a Host,
	// and the grpc metadata may be used to determine the Host.
	HostId *string `protobuf:"bytes,6,opt,name=host_id,json=hostId,proto3,oneof" json:"host_id,omitempty"`
	// VmID is the unique identifier of the Vm that is associated with the Job.
	VmId          string `protobuf:"bytes,7,opt,name=vm_id,json=vmId,proto3" json:"vm_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JobStatus) Reset() {
	*x = JobStatus{}
	mi := &file_pilab_cloud_job_status_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobStatus) ProtoMessage() {}

func (x *JobStatus) ProtoReflect() protoreflect.Message {
	mi := &file_pilab_cloud_job_status_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobStatus.ProtoReflect.Descriptor instead.
func (*JobStatus) Descriptor() ([]byte, []int) {
	return file_pilab_cloud_job_status_proto_rawDescGZIP(), []int{0}
}

func (x *JobStatus) GetJob() string {
	if x != nil {
		return x.Job
	}
	return ""
}

func (x *JobStatus) GetElapsedTime() uint64 {
	if x != nil {
		return x.ElapsedTime
	}
	return 0
}

func (x *JobStatus) GetRemainingTime() uint64 {
	if x != nil {
		return x.RemainingTime
	}
	return 0
}

func (x *JobStatus) GetProgress() float32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *JobStatus) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *JobStatus) GetHostId() string {
	if x != nil && x.HostId != nil {
		return *x.HostId
	}
	return ""
}

func (x *JobStatus) GetVmId() string {
	if x != nil {
		return x.VmId
	}
	return ""
}

var File_pilab_cloud_job_status_proto protoreflect.FileDescriptor

var file_pilab_cloud_job_status_proto_rawDesc = string([]byte{
	0x0a, 0x1c, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x6a, 0x6f,
	0x62, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b,
	0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x22, 0xed, 0x01, 0x0a, 0x09,
	0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x6f, 0x62,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x21, 0x0a, 0x0c, 0x65,
	0x6c, 0x61, 0x70, 0x73, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0b, 0x65, 0x6c, 0x61, 0x70, 0x73, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e,
	0x67, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x1d, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x1c, 0x0a, 0x07, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x01, 0x52, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x13,
	0x0a, 0x05, 0x76, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x76,
	0x6d, 0x49, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x32, 0x5a, 0x30, 0x67,
	0x6f, 0x2e, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2e, 0x68, 0x75, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2f, 0x76, 0x69, 0x72, 0x74, 0x70, 0x62, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x69, 0x6c, 0x61,
	0x62, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x3b, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x70, 0x62, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_pilab_cloud_job_status_proto_rawDescOnce sync.Once
	file_pilab_cloud_job_status_proto_rawDescData []byte
)

func file_pilab_cloud_job_status_proto_rawDescGZIP() []byte {
	file_pilab_cloud_job_status_proto_rawDescOnce.Do(func() {
		file_pilab_cloud_job_status_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pilab_cloud_job_status_proto_rawDesc), len(file_pilab_cloud_job_status_proto_rawDesc)))
	})
	return file_pilab_cloud_job_status_proto_rawDescData
}

var file_pilab_cloud_job_status_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_pilab_cloud_job_status_proto_goTypes = []any{
	(*JobStatus)(nil), // 0: pilab.cloud.JobStatus
}
var file_pilab_cloud_job_status_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_pilab_cloud_job_status_proto_init() }
func file_pilab_cloud_job_status_proto_init() {
	if File_pilab_cloud_job_status_proto != nil {
		return
	}
	file_pilab_cloud_job_status_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pilab_cloud_job_status_proto_rawDesc), len(file_pilab_cloud_job_status_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pilab_cloud_job_status_proto_goTypes,
		DependencyIndexes: file_pilab_cloud_job_status_proto_depIdxs,
		MessageInfos:      file_pilab_cloud_job_status_proto_msgTypes,
	}.Build()
	File_pilab_cloud_job_status_proto = out.File
	file_pilab_cloud_job_status_proto_goTypes = nil
	file_pilab_cloud_job_status_proto_depIdxs = nil
}
